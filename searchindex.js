Search.setIndex({"docnames": ["attributes", "change_log", "debug_repl", "getting_started", "index", "rule_engine/ast", "rule_engine/builtins", "rule_engine/engine", "rule_engine/errors", "rule_engine/index", "rule_engine/parser/index", "rule_engine/parser/utilities", "rule_engine/suggestions", "rule_engine/types", "syntax", "types"], "filenames": ["attributes.rst", "change_log.rst", "debug_repl.rst", "getting_started.rst", "index.rst", "rule_engine/ast.rst", "rule_engine/builtins.rst", "rule_engine/engine.rst", "rule_engine/errors.rst", "rule_engine/index.rst", "rule_engine/parser/index.rst", "rule_engine/parser/utilities.rst", "rule_engine/suggestions.rst", "rule_engine/types.rst", "syntax.rst", "types.rst"], "titles": ["Data Attributes", "Change Log", "Debug REPL", "Getting Started", "Rule Engine Documentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rule_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utilities</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">suggestions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">types</span></code>", "Rule Syntax", "Data Types"], "terms": {"The": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "oper": [0, 1, 3, 7, 8, 10, 15], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15], "us": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15], "recurs": [0, 10, 13], "resolv": [0, 1, 5, 6, 7, 8, 13, 14], "valu": [0, 1, 5, 6, 7, 8, 11, 12, 13, 15], "from": [0, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14, 15], "compound": [0, 4, 13], "nativ": [0, 5, 8, 13], "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "an": [0, 1, 2, 3, 5, 7, 8, 10, 12, 13, 14, 15], "object": [0, 2, 4, 5, 7, 8, 10, 13, 14, 15], "dictionari": [0, 7, 15], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "when": [0, 2, 3, 6, 7, 8, 10, 12, 13, 14], "thing": [0, 2, 3, 7, 8, 15], "which": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14], "rule": [0, 1, 2, 6, 7, 8, 10, 13, 15], "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "evalu": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15], "ha": [0, 2, 3, 10, 14, 15], "member": [0, 1, 3, 5, 7, 10, 13, 14, 15], "own": [0, 4], "submemb": 0, "If": [0, 3, 7, 11, 12, 13, 14], "function": [0, 1, 4, 5, 6, 8], "fail": [0, 3, 7, 8, 14], "check": [0, 3, 5, 7, 13, 14], "determin": [0, 3, 7, 14], "follow": [0, 2, 3, 14, 15], "ar": [0, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15], "default": [0, 6, 7, 11, 13, 14, 15], "context": [0, 1, 2, 3, 5, 6, 7, 10, 14, 15], "name": [0, 1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14], "arrai": [0, 1, 3, 5, 13, 15], "is_empti": 0, "boolean": [0, 3, 5, 7, 13, 14, 15], "length": [0, 13, 14, 15], "to_ari": [0, 1], "to_set": 0, "set": [0, 1, 5, 6, 7, 11, 13, 14, 15], "datetim": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15], "date": [0, 3, 14, 15], "dai": [0, 14, 15], "hour": [0, 14], "microsecond": 0, "millisecond": 0, "minut": [0, 3, 14], "month": [0, 14], "second": [0, 3, 13, 14], "to_epoch": [0, 1], "weekdai": 0, "string": [0, 1, 3, 4, 5, 6, 7, 11, 12, 13, 14, 15], "year": [0, 14], "zone_nam": 0, "ceil": [0, 1], "floor": [0, 1, 14], "is_nan": [0, 1], "to_flt": [0, 1], "to_str": [0, 1], "map": [0, 1, 3, 5, 6, 7, 10, 13, 14, 15], "kei": [0, 3, 5, 6, 8, 13, 15], "as_low": 0, "as_upp": [0, 3], "to_int": [0, 1], "timedelta": [0, 1, 4, 5, 8, 11, 13], "total_second": 0, "due": 0, "syntax": [0, 3, 4, 5, 7, 8, 10, 15], "point": [0, 1, 5, 11, 13, 14, 15], "liter": [0, 1, 3, 4, 6, 7, 10, 11, 15], "must": [0, 3, 5, 7, 14, 15], "access": [0, 3, 5, 6, 7, 14], "parenthesi": [0, 14], "For": [0, 3, 14, 15], "exampl": [0, 3, 5, 7, 13, 14, 15], "3": [0, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15], "14": 0, "invalid": [0, 1, 3, 14], "while": [0, 1, 3, 5, 7, 8, 10, 14, 15], "valid": [0, 3, 7, 8, 13, 14], "document": [1, 3, 5, 14, 15], "contain": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "note": [1, 14, 15], "major": [1, 5], "each": [1, 3, 7, 10, 13, 14, 15], "engin": [1, 2, 3, 6, 8, 9, 13, 14, 15], "In": [1, 3, 13, 14], "comparison": [1, 3, 5, 7, 14], "git": 1, "list": [1, 3, 12, 14, 15], "curat": 1, "develop": [1, 3, 15], "team": 1, "worthi": 1, "progress": 1, "ad": [1, 3, 6, 7, 8, 13, 15], "rang": [1, 5, 14], "builtin": [1, 4, 7, 8, 9, 15], "releas": [1, 3], "v4": [1, 15], "januari": 1, "15th": 1, "2024": 1, "attribut": [1, 4, 5, 7, 8, 14], "float": [1, 3, 4, 5, 7, 8, 11, 13], "decemb": 1, "11th": 1, "2023": 1, "coercion": 1, "themselv": [1, 15], "e": [1, 3, 13, 14, 15], "g": [1, 13, 14, 15], "august": 1, "3rd": 1, "ab": [1, 14], "support": [1, 3, 7, 13, 15], "from_typ": [1, 13], "handl": [1, 3, 5, 7, 14], "": [1, 3, 7, 8, 10, 13, 14, 15], "hint": [1, 4, 7, 13], "juli": 1, "break": [1, 5], "return": [1, 3, 5, 6, 7, 10, 11, 12, 13, 14], "charact": [1, 5, 14], "instead": [1, 3, 14], "split": [1, 3, 13, 14], "new": [1, 5, 8, 12, 13, 14], "whitespac": [1, 3, 14], "word": [1, 10, 12], "keyword": [1, 3], "onli": [1, 3, 13, 14, 15], "argument": [1, 3, 4, 6, 13, 14], "drop": 1, "now": [1, 3, 14], "rais": [1, 3, 7, 8, 10, 13, 14], "floatsyntaxerror": [1, 8, 14], "rulesyntaxerror": [1, 8], "move": 1, "rule_engin": [1, 2, 3, 4, 7, 10], "data": [1, 4, 5, 6, 7, 13, 14], "v3": [1, 15], "june": 1, "16th": 1, "remov": [1, 3], "test": [1, 2, 3, 5, 7, 13, 14], "github": [1, 4], "action": 1, "add": [1, 3, 5, 7, 14], "regex": [1, 3, 4, 7, 14], "error": [1, 3, 4, 9, 12], "detail": 1, "debug": [1, 3, 4, 10], "repl": [1, 4], "style": 1, "comment": [1, 5], "2022": 1, "march": 1, "19th": 1, "concaten": 1, "via": 1, "20th": 1, "2021": 1, "april": 1, "refactor": 1, "ast": [1, 3, 4, 7, 8, 9, 10], "modul": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13], "datatyp": [1, 3, 4, 5, 6, 13, 15], "class": [1, 3, 6, 8, 15], "dedic": 1, "comprehensionexpress": [1, 5], "suggest": [1, 4, 8, 9], "attributeresolutionerror": [1, 7, 8], "symbolresolutionerror": [1, 3, 7, 8], "1st": 1, "switch": 1, "decim": [1, 7, 11, 14, 15], "intern": [1, 5, 13, 15], "reserv": [1, 10], "elif": [1, 3, 14], "els": [1, 14], "futur": [1, 14], "thei": [1, 3, 4, 15], "longer": 1, "symbol": [1, 2, 4, 5, 6, 7, 8, 12, 13, 15], "some": [1, 3, 4, 7, 14], "v2": [1, 2, 3], "novemb": 1, "7th": 1, "2020": [1, 3], "util": [1, 9, 10, 13, 14], "safe": [1, 3, 5, 13, 14], "navig": 1, "item": [1, 3, 5, 7, 8, 14], "slice": 1, "travi": 1, "ci": 1, "continu": 1, "integr": 1, "iter": [1, 3, 5, 7, 13, 14, 15], "have": [1, 3, 7, 14, 15], "multipl": [1, 5, 10, 14], "octob": 1, "arithmet": [1, 5, 14, 15], "all": [1, 3, 7, 13, 14, 15], "current": [1, 7, 13, 14], "proper": 1, "re_group": [1, 14], "extract": 1, "group": [1, 14], "regular": [1, 3, 4, 5, 8], "express": [1, 2, 3, 4, 7, 8], "match": [1, 3, 4, 5, 7, 12, 14, 15], "septemb": 1, "9th": 1, "script": 1, "entri": 1, "pipfil": 1, "sequenc": [1, 13, 14], "coverag": 1, "report": 1, "enum": 1, "custom": [1, 2, 7, 14], "improv": 1, "get": [1, 4, 13, 14, 15], "allow": [1, 2, 3, 7, 10, 13, 15], "retriev": [1, 5, 6, 7, 13], "index": [1, 4, 8, 14], "abil": [1, 15], "specifi": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15], "option": [1, 2, 3, 4, 7, 8, 10, 12, 14], "null": [1, 3, 5, 13, 14, 15], "2nd": 1, "2019": [1, 14], "addit": [1, 3, 5, 14, 15], "inform": [1, 3, 7, 8, 13, 14, 15], "graphviz": [1, 3, 7], "output": 1, "start": [1, 2, 4, 5, 14, 15], "automat": [1, 3, 7], "unit": [1, 14], "deploy": 1, "convers": [1, 13, 15], "to_recursive_resolv": 1, "favor": 1, "to_default_resolv": 1, "default_valu": [1, 3, 7], "kwarg": [1, 3, 5, 6, 10], "__init__": [1, 3, 5, 6, 7, 8, 10], "v1": 1, "27th": 1, "to_default_dict": 1, "2018": 1, "first": [1, 3, 4, 10, 13, 14], "sinc": [2, 15], "version": [2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15], "4": [2, 3, 4, 8, 13, 14], "0": [2, 3, 5, 6, 7, 8, 12, 13, 14, 15], "packag": [2, 3, 5, 7, 8], "includ": [2, 3, 4, 14], "provid": [2, 3, 4, 6, 7, 10, 14, 15], "read": 2, "eval": [2, 3], "print": 2, "loop": 2, "purpos": [2, 3, 4, 13], "execut": 2, "m": 2, "debug_repl": 2, "onc": [2, 3, 10, 15], "view": 2, "result": [2, 3, 5, 7, 14, 15], "command": 2, "line": 2, "avail": [2, 3, 4, 8, 15], "edit": 2, "consol": 2, "interact": 2, "user": [2, 3], "setup": 2, "environ": 2, "file": 2, "path": 2, "run": 2, "sourc": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13], "code": [2, 5], "through": [2, 3, 14], "either": [2, 3, 5, 6, 7, 8, 13, 14, 15], "mai": [2, 3, 5, 13, 14, 15], "defin": [2, 4, 5, 6, 7, 10, 13, 14, 15], "instanc": [2, 3, 6, 7], "addition": [2, 7, 14], "demonstr": 2, "case": [2, 3, 7, 13, 14], "comic": [2, 3], "book": [2, 3], "necessari": [2, 3, 5, 7], "dict": [2, 3, 6, 7, 14, 15], "titl": [2, 3], "batman": [2, 3], "publish": [2, 3], "dc": [2, 3], "issu": [2, 3, 7, 8], "1": [2, 3, 4, 7, 13, 14, 15], "exit": 2, "superman": 2, "fals": [2, 3, 4, 5, 10, 14, 15], "5": [2, 3, 5, 8, 15], "true": [2, 3, 4, 5, 7, 13, 14, 15], "meant": [3, 5], "filter": [3, 7, 12, 14], "arbitrari": [3, 4, 7, 14], "them": [3, 13, 14, 15], "end": [3, 14], "languag": [3, 4, 14], "similar": [3, 14], "borrow": 3, "featur": [3, 4, 5, 10], "rubi": 3, "exec": 3, "secur": 3, "potenti": 3, "untrust": 3, "need": [3, 7, 12, 14], "identifi": [3, 7, 8], "would": [3, 7, 15], "like": [3, 14], "kind": [3, 13], "variabl": [3, 5, 6, 14], "rest": 3, "assum": [3, 15], "variou": [3, 10, 11], "could": [3, 14], "str": [3, 5, 6, 7, 8, 10, 11, 12, 13, 15], "int": [3, 7, 13, 15], "collect": [3, 7, 13], "might": 3, "look": [3, 7], "89": 3, "28": 3, "flash": 3, "753": 3, "captain": 3, "marvel": 3, "18": 3, "6": 3, "creat": [3, 4, 7, 14, 15], "target": 3, "becom": 3, "done": [3, 5, 10], "initi": [3, 6], "requir": [3, 13, 14], "one": [3, 7, 13, 14], "notic": 3, "also": [3, 13, 14, 15], "letter": [3, 14], "punctuat": 3, "just": [3, 14], "becaus": [3, 13, 14], "space": [3, 14], "simpl": 3, "more": [3, 4, 5, 7, 10, 14, 15], "complex": [3, 5], "condit": [3, 5, 14], "d": [3, 14], "05": 3, "01": 3, "06": 3, "prefix": [3, 6, 14], "yyyi": 3, "mm": 3, "dd": 3, "hh": 3, "ss": 3, "format": [3, 8, 11, 14], "time": [3, 5, 7, 8, 10, 11, 14, 15], "portion": 3, "omit": [3, 14], "normal": [3, 14, 15], "00": [3, 14], "midnight": [3, 14], "zero": [3, 14, 15], "see": [3, 4, 7, 14, 15], "section": [3, 15], "certain": [3, 7], "dot": 3, "variat": 3, "right": [3, 14], "hand": 3, "side": [3, 5], "left": [3, 14], "compar": [3, 13, 14], "been": [3, 10, 14, 15], "appli": [3, 4, 7, 14, 15], "two": [3, 10, 13, 14, 15], "primari": [3, 7], "method": [3, 5, 6, 7, 14], "those": 3, "whether": [3, 4, 5, 7, 10, 13], "singl": [3, 5, 6, 14, 15], "yield": [3, 7], "ones": 3, "gener": [3, 4, 5, 7, 14], "0x7f2bdafbe650": 3, "previou": [3, 14], "were": 3, "behavior": [3, 7, 15], "modifi": 3, "had": 3, "base": [3, 6, 7, 8, 10, 13, 14], "structur": [3, 7], "def": 3, "self": 3, "To": [3, 10, 15], "configur": [3, 4], "how": [3, 7, 14, 15], "up": [3, 7, 14], "given": 3, "resolve_attribut": [3, 7], "resolve_item": [3, 7], "same": [3, 7, 13, 14, 15], "wai": [3, 5, 13], "share": 3, "other": [3, 7, 8, 13, 14, 15], "should": [3, 5, 7, 8, 15], "do": [3, 7, 14, 15], "artist": 3, "number": [3, 13, 14, 15], "contribut": 3, "its": [3, 13], "flexibl": 3, "most": [3, 13], "unnecessari": 3, "By": 3, "desir": 3, "behav": [3, 15], "treat": [3, 5], "unknown": [3, 13], "often": [3, 5], "none": [3, 5, 6, 7, 8, 12, 13], "ani": [3, 5, 7, 10, 13, 14], "paramet": [3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "successfulli": 3, "non": [3, 13, 14], "empti": [3, 14], "reason": [3, 5, 14, 15], "neither": 3, "suitabl": [3, 7, 12], "signatur": 3, "where": [3, 7, 8, 14], "being": [3, 7, 8, 13, 14], "forward": 3, "ensur": [3, 7, 13, 15], "consist": [3, 7], "except": [3, 7, 10, 13, 14], "make": [3, 10, 12, 15], "suggest_symbol": [3, 12], "pass": [3, 6, 7, 14, 15], "assist": 3, "author": [3, 15], "correct": [3, 7], "mistak": 3, "compat": [3, 5, 7, 13, 14, 15], "With": 3, "evaluationerror": [3, 8, 10, 14], "incompat": [3, 8, 14], "detect": 3, "integ": [3, 13], "possibl": [3, 15], "prior": 3, "otherwis": 3, "symboltypeerror": [3, 8], "type_resolv": [3, 7], "expect": [3, 8], "take": [3, 10, 13, 14, 15], "whose": 3, "enumer": 3, "know": [3, 15], "about": 3, "four": [3, 14], "undefin": [3, 5, 6, 7, 8, 13], "without": [3, 13, 14], "explicit": [3, 13], "refer": [3, 7, 14], "referenc": [3, 14], "known": [3, 7], "text": [3, 4, 5, 7, 8, 10, 14, 15], "stan": 3, "lee": 3, "call": [3, 6, 7, 8, 15], "respect": [3, 10, 14], "nullabl": [3, 13], "mean": [3, 13, 14, 15], "anoth": [3, 14, 15], "posit": [3, 14], "minimum_argu": [3, 13], "few": [3, 15], "mani": [3, 10, 14], "alwai": [3, 5, 15], "so": 3, "remain": 3, "2": [3, 4, 6, 7, 8, 12, 13, 14, 15], "howev": [3, 7, 14], "third": [3, 14], "seper": 3, "final": [3, 14], "maximum": [3, 14], "messag": [3, 8], "return_typ": [3, 13], "three": [3, 13, 14], "argument_typ": [3, 13], "minimum": [3, 13], "preform": [3, 14], "conveni": [3, 7], "type_resolver_from_dict": [3, 7], "simpli": 3, "popul": [3, 5], "altern": [3, 12, 14], "from_default": [3, 6, 14], "constructor": 3, "overrid": 3, "overlap": 3, "custombuiltinscontext": 3, "arg": [3, 5], "parent": 3, "default_timezon": [3, 7, 11, 14], "super": 3, "expos": [3, 7], "__version__": 3, "timezon": [3, 6, 7, 11, 14], "There": [3, 13, 14], "techniqu": [3, 14], "is_valid": [3, 7], "It": [3, 7, 13, 15], "within": [3, 5, 6, 7, 8, 10, 14, 15], "to_graphviz": [3, 7], "direct": 3, "graph": 3, "abstract": [3, 5, 7, 10], "tree": [3, 5, 7, 10], "help": [3, 5], "project": 4, "librari": [4, 14], "logic": [4, 5, 7, 10, 14], "http": 4, "zerostein": 4, "io": 4, "written": 4, "import": [4, 15], "email": 4, "first_nam": 4, "luke": 4, "rebel": 4, "org": 4, "last_nam": 4, "skywalk": 4, "darth": 4, "vader": 4, "dvader": 4, "empir": 4, "net": 4, "folder": 4, "basic": [4, 14], "advanc": 4, "inspect": 4, "grammar": [4, 5, 7, 8, 10], "parser": [4, 7, 9, 14], "cli": 4, "chang": [4, 5, 6, 7, 8, 13, 15], "log": 4, "x": 4, "search": [4, 5, 7, 14], "page": [4, 15], "node": [5, 8, 10], "compris": 5, "pars": [5, 7, 8, 10, 11, 14], "content": 5, "privat": 5, "consum": 5, "directli": 5, "care": [5, 15], "api": [5, 7, 10], "caus": [5, 7, 8, 10], "bump": 5, "updat": [5, 14], "order": [5, 14], "assign": [5, 7, 14], "value_typ": [5, 6, 13], "wherebi": 5, "statement": [5, 10, 14], "astnodebas": [5, 10], "A": [5, 6, 7, 8, 10, 12, 13, 14], "repres": [5, 11, 13, 14], "top": 5, "level": 5, "expressionbas": 5, "result_typ": 5, "success": 5, "leftoperatorrightexpressionbas": 5, "type_": 5, "compos": [5, 14], "separ": 5, "compatible_typ": 5, "tupl": [5, 12, 13, 15], "indic": [5, 13], "center": 5, "subclass": [5, 7, 14], "literalexpressionbas": 5, "addexpress": 5, "subtractexpress": 5, "subtract": [5, 14, 15], "arithmeticexpress": 5, "divis": [5, 14], "arithmeticcomparisonexpress": 5, "comparisonexpress": 5, "less": [5, 14], "than": [5, 14], "equal": [5, 13, 14], "greater": [5, 14], "bitwiseexpress": 5, "bitwis": [5, 14], "xor": [5, 14], "shift": [5, 14], "bitwiseshiftexpress": 5, "logicexpress": 5, "fuzzycomparisonexpress": 5, "doe": [5, 7, 10, 11, 14], "arrayexpress": 5, "_collectionmixin": 5, "sub": [5, 14], "booleanexpress": [5, 14], "datetimeexpress": 5, "specif": [5, 7, 10, 14], "floatexpress": [5, 14], "numer": [5, 13, 14], "mappingexpress": 5, "associ": 5, "between": [5, 14, 15], "nullexpress": [5, 14], "setexpress": 5, "stringexpress": 5, "timedeltaexpress": 5, "offset": 5, "containsexpress": 5, "exist": [5, 7], "getattributeexpress": 5, "object_": [5, 7, 8], "getitemexpress": 5, "getsliceexpress": 5, "stop": [5, 14], "symbolexpress": 5, "scope": [5, 6, 7, 8], "ternaryexpress": 5, "case_tru": 5, "case_fals": 5, "ternari": 5, "These": [5, 6, 14], "involv": [5, 10], "befor": [5, 7, 14], "unaryexpress": 5, "unari": 5, "namespac": 6, "tzinfo": [6, 7, 11], "timestamp": [6, 11], "classmethod": [6, 7, 13], "resolve_typ": [6, 7], "scope_nam": 6, "built": [6, 10], "ident": 6, "extern": [7, 13], "face": 7, "replac": [7, 12, 14], "effect": [7, 13], "namedtupl": 7, "sensit": 7, "against": 7, "whitelist": 7, "correspond": [7, 10, 13], "interfac": 7, "typeerror": [7, 13], "callback": 7, "regex_flag": 7, "local": [7, 14], "decimal_context": 7, "aspect": 7, "what": [7, 8], "flag": 7, "re": [7, 8], "place": [7, 10, 14], "default_timzezon": 7, "special": [7, 13], "insensit": 7, "utc": 7, "miss": 7, "taken": [7, 14], "thread": 7, "regardless": 7, "origin": [7, 12], "resolut": [7, 8], "itself": [7, 14], "caller": [7, 15], "appropri": 7, "wa": [7, 8, 14, 15], "resolve_attribute_typ": 7, "object_typ": [7, 8], "perform": [7, 8, 14, 15], "constant": [7, 13, 14], "after": [7, 14], "constraint": 7, "unlik": [7, 14], "necessarili": 7, "over": 7, "syntact": 7, "verifi": [7, 13], "well": [7, 13], "regard": [7, 8, 15], "form": [7, 13], "appear": 7, "bool": [7, 10, 13, 15], "diagram": 7, "digraph": 7, "sentinel": 8, "someth": 8, "falsi": 8, "attribute_nam": 8, "root": 8, "attributetypeerror": 8, "is_valu": 8, "is_typ": 8, "expected_typ": 8, "datetimesyntaxerror": [8, 14], "syntaxerror": 8, "improperli": 8, "descript": [8, 14], "occur": [8, 12], "engineerror": 8, "inherit": [8, 10], "dure": [8, 10], "reduct": [8, 10], "phase": [8, 10], "functioncallerror": [8, 14], "function_nam": 8, "trigger": 8, "lookuperror": [8, 14], "lookup": [8, 14], "obtain": [8, 14], "analog": [8, 14], "combin": [8, 14], "indexerror": 8, "keyerror": 8, "regexsyntaxerror": 8, "improp": 8, "token": 8, "ply": [8, 10], "relat": [8, 10], "symbol_nam": 8, "symbol_scop": 8, "abl": [8, 10, 13, 14], "timedeltasyntaxerror": [8, 14], "convert": [10, 13, 15], "later": 10, "parserbas": 10, "compon": [10, 14], "reduc": [10, 14], "construct": 10, "effici": 10, "enabl": 10, "definit": [10, 13], "defer": 10, "uniniti": 10, "next": 10, "build": [10, 14], "preced": 10, "reserved_word": 10, "parse_datetim": [11, 14], "parse_float": [11, 14], "parse_timedelta": [11, 14], "period": [11, 14], "iso": [11, 14], "8601": [11, 14], "durat": [11, 14], "helper": 12, "select": 12, "best": 12, "out": [12, 14], "found": 12, "work": [13, 14], "coerce_valu": 13, "verify_typ": 13, "boundari": [13, 14], "is_integer_numb": 13, "whole": 13, "loss": 13, "is_natural_numb": 13, "natur": [13, 14], "neg": [13, 14], "is_numer": 13, "capabl": [13, 15], "is_real_numb": 13, "real": 13, "finit": 13, "despit": 13, "nan": [13, 14], "consid": 13, "iterable_member_value_typ": 13, "python_valu": 13, "extens": 13, "never": 13, "unspecifi": 13, "differ": [13, 14], "deal": 13, "scalar": [13, 15], "dt": 13, "isinst": 13, "__class__": 13, "ignor": [13, 14], "is_compat": 13, "static": 13, "value_type_nul": 13, "everi": [13, 14], "key_typ": 13, "particular": 13, "from_nam": 13, "One": [13, 14], "python_typ": 13, "typehint": 13, "valueerror": 13, "from_valu": 13, "dt1": 13, "dt2": 13, "both": [13, 14, 15], "manner": [13, 14], "is_definit": 13, "off": 14, "small": 14, "tabl": [14, 15], "Not": 14, "below": 14, "standard": 14, "awar": 14, "outlin": 14, "expon": 14, "modulo": 14, "fuzzi": 14, "lexicograph": 14, "append": 14, "attempt": 14, "variant": 14, "confus": 14, "bit": 14, "wise": 14, "leverag": 14, "held": 14, "element": 14, "last": 14, "veri": 14, "mandatori": 14, "delimit": 14, "entir": 14, "wrap": 14, "bracket": 14, "squar": 14, "v": 14, "odd": 14, "even": 14, "limit": 14, "unpack": 14, "k": 14, "my_dict": 14, "tradit": 14, "question": 14, "mark": 14, "colon": 14, "true_cas": 14, "false_cas": 14, "unlimit": 14, "star": 14, "war": 14, "r": 14, "sta": 14, "mismatch": 14, "inf": 14, "infin": 14, "membership": 14, "enclos": 14, "doubl": 14, "quot": 14, "come": [14, 15], "lead": 14, "open": 14, "t": 14, "underli": 14, "dateutil": 14, "isopars": 14, "09": 14, "23": 14, "exactli": 14, "show": 14, "equival": [14, 15], "unless": 14, "04": 14, "edt": 14, "binari": [14, 15], "octal": 14, "hexadecim": 14, "0b": 14, "0o": 14, "0x": 14, "10": 14, "0b10": 14, "0o10": 14, "8": 14, "0x10": 14, "16": 14, "scientif": 14, "notat": 14, "1e0": 14, "0e0": 14, "subset": 14, "everyth": 14, "represent": [14, 15], "p1d": 14, "pt24h": 14, "24": 14, "pt1440m": 14, "440": 14, "occurr": 14, "size": 14, "pi": 14, "overridden": 14, "absolut": 14, "anyth": [14, 15], "truthi": 14, "max": 14, "largest": 14, "min": 14, "smallest": 14, "properli": 14, "random": 14, "upper": 14, "step": 14, "suppli": 14, "inclus": 14, "exclus": 14, "sep": 14, "maxsplit": 14, "substr": 14, "tp": 14, "alter": 14, "consecut": 14, "b": 14, "guarante": 14, "sum": 14, "mathemat": [14, 15], "71828": 14, "14159": 14, "technic": 14, "here": 14, "unavail": 14, "todai": 14, "exclud": 14, "describ": 15, "callabl": 15, "nonetyp": 15, "though": 15, "complet": 15, "comprehens": 15, "back": 15, "intuit": 15, "audienc": 15, "who": 15, "familiar": 15, "nuanc": 15, "repr": 15, "from_float": 15, "input": 15, "explicitli": 15, "coerc": 15, "That": 15, "affect": 15, "uniqu": 15, "mix": 15, "extend": 15, "introduc": 15, "you": 15, "30": 15, "happen": 15, "much": 15, "event": 15}, "objects": {"rule_engine": [[5, 0, 0, "-", "ast"], [6, 0, 0, "-", "builtins"], [7, 0, 0, "-", "engine"], [8, 0, 0, "-", "errors"], [10, 0, 0, "-", "parser"], [12, 0, 0, "-", "suggestions"], [13, 0, 0, "-", "types"]], "rule_engine.ast": [[5, 1, 1, "", "AddExpression"], [5, 1, 1, "", "ArithmeticComparisonExpression"], [5, 1, 1, "", "ArithmeticExpression"], [5, 1, 1, "", "ArrayExpression"], [5, 1, 1, "", "Assignment"], [5, 1, 1, "", "BitwiseExpression"], [5, 1, 1, "", "BitwiseShiftExpression"], [5, 1, 1, "", "BooleanExpression"], [5, 1, 1, "", "ComparisonExpression"], [5, 1, 1, "", "ComprehensionExpression"], [5, 1, 1, "", "ContainsExpression"], [5, 1, 1, "", "DatetimeExpression"], [5, 1, 1, "", "ExpressionBase"], [5, 1, 1, "", "FloatExpression"], [5, 1, 1, "", "FuzzyComparisonExpression"], [5, 1, 1, "", "GetAttributeExpression"], [5, 1, 1, "", "GetItemExpression"], [5, 1, 1, "", "GetSliceExpression"], [5, 1, 1, "", "LeftOperatorRightExpressionBase"], [5, 1, 1, "", "LiteralExpressionBase"], [5, 1, 1, "", "LogicExpression"], [5, 1, 1, "", "MappingExpression"], [5, 1, 1, "", "NullExpression"], [5, 1, 1, "", "SetExpression"], [5, 1, 1, "", "Statement"], [5, 1, 1, "", "StringExpression"], [5, 1, 1, "", "SubtractExpression"], [5, 1, 1, "", "SymbolExpression"], [5, 1, 1, "", "TernaryExpression"], [5, 1, 1, "", "TimedeltaExpression"], [5, 1, 1, "", "UnaryExpression"]], "rule_engine.ast.AddExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArithmeticComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArithmeticExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArrayExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.Assignment": [[5, 3, 1, "", "__init__"], [5, 2, 1, "", "name"], [5, 2, 1, "", "value"], [5, 2, 1, "", "value_type"]], "rule_engine.ast.BitwiseExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.BitwiseShiftExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.BooleanExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ComprehensionExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ContainsExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.DatetimeExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ExpressionBase": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.FloatExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.FuzzyComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetAttributeExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetItemExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetSliceExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.LeftOperatorRightExpressionBase": [[5, 3, 1, "", "__init__"], [5, 2, 1, "", "compatible_types"]], "rule_engine.ast.LiteralExpressionBase": [[5, 3, 1, "", "__init__"]], "rule_engine.ast.LogicExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.MappingExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.NullExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SetExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.StringExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SubtractExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SymbolExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.TernaryExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.TimedeltaExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.UnaryExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.builtins": [[6, 1, 1, "", "Builtins"]], "rule_engine.builtins.Builtins": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "from_defaults"], [6, 3, 1, "", "resolve_type"], [6, 2, 1, "", "scope_name"]], "rule_engine.engine": [[7, 1, 1, "", "Context"], [7, 1, 1, "", "Rule"], [7, 4, 1, "", "resolve_attribute"], [7, 4, 1, "", "resolve_item"], [7, 4, 1, "", "type_resolver_from_dict"]], "rule_engine.engine.Context": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "assignments"], [7, 2, 1, "", "builtins"], [7, 2, 1, "", "decimal_context"], [7, 2, 1, "", "default_timezone"], [7, 2, 1, "", "default_value"], [7, 2, 1, "", "regex_flags"], [7, 3, 1, "", "resolve"], [7, 3, 1, "", "resolve_attribute"], [7, 3, 1, "", "resolve_attribute_type"], [7, 3, 1, "", "resolve_type"], [7, 2, 1, "", "symbols"]], "rule_engine.engine.Rule": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "evaluate"], [7, 3, 1, "", "filter"], [7, 3, 1, "", "is_valid"], [7, 3, 1, "", "matches"], [7, 2, 1, "", "parser"], [7, 3, 1, "", "to_graphviz"]], "rule_engine.errors": [[8, 5, 1, "", "AttributeResolutionError"], [8, 5, 1, "", "AttributeTypeError"], [8, 5, 1, "", "DatetimeSyntaxError"], [8, 5, 1, "", "EngineError"], [8, 5, 1, "", "EvaluationError"], [8, 5, 1, "", "FloatSyntaxError"], [8, 5, 1, "", "FunctionCallError"], [8, 5, 1, "", "LookupError"], [8, 5, 1, "", "RegexSyntaxError"], [8, 5, 1, "", "RuleSyntaxError"], [8, 5, 1, "", "SymbolResolutionError"], [8, 5, 1, "", "SymbolTypeError"], [8, 5, 1, "", "SyntaxError"], [8, 5, 1, "", "TimedeltaSyntaxError"], [8, 6, 1, "", "UNDEFINED"]], "rule_engine.errors.AttributeResolutionError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "attribute_name"], [8, 2, 1, "", "object"], [8, 2, 1, "", "suggestion"], [8, 2, 1, "", "thing"]], "rule_engine.errors.AttributeTypeError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "attribute_name"], [8, 2, 1, "", "expected_type"], [8, 2, 1, "", "is_type"], [8, 2, 1, "", "is_value"], [8, 2, 1, "", "object_type"]], "rule_engine.errors.DatetimeSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.EngineError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "message"]], "rule_engine.errors.FloatSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.FunctionCallError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "error"]], "rule_engine.errors.LookupError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "container"], [8, 2, 1, "", "item"]], "rule_engine.errors.RegexSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "error"], [8, 2, 1, "", "value"]], "rule_engine.errors.RuleSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "token"]], "rule_engine.errors.SymbolResolutionError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "suggestion"], [8, 2, 1, "", "symbol_name"], [8, 2, 1, "", "symbol_scope"], [8, 2, 1, "", "thing"]], "rule_engine.errors.SymbolTypeError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "expected_type"], [8, 2, 1, "", "is_type"], [8, 2, 1, "", "is_value"], [8, 2, 1, "", "symbol_name"]], "rule_engine.errors.TimedeltaSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.parser": [[10, 1, 1, "", "Parser"], [10, 1, 1, "", "ParserBase"], [11, 0, 0, "-", "utilities"]], "rule_engine.parser.Parser": [[10, 3, 1, "", "__init__"]], "rule_engine.parser.ParserBase": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "parse"], [10, 2, 1, "", "precedence"], [10, 2, 1, "", "reserved_words"]], "rule_engine.parser.utilities": [[11, 4, 1, "", "parse_datetime"], [11, 4, 1, "", "parse_float"], [11, 4, 1, "", "parse_timedelta"]], "rule_engine.suggestions": [[12, 4, 1, "", "suggest_symbol"]], "rule_engine.types": [[13, 1, 1, "", "DataType"], [13, 4, 1, "", "coerce_value"], [13, 4, 1, "", "is_integer_number"], [13, 4, 1, "", "is_natural_number"], [13, 4, 1, "", "is_numeric"], [13, 4, 1, "", "is_real_number"], [13, 4, 1, "", "iterable_member_value_type"]], "rule_engine.types.DataType": [[13, 3, 1, "", "ARRAY"], [13, 2, 1, "", "BOOLEAN"], [13, 2, 1, "", "DATETIME"], [13, 2, 1, "", "FLOAT"], [13, 3, 1, "", "FUNCTION"], [13, 3, 1, "", "MAPPING"], [13, 2, 1, "", "NULL"], [13, 3, 1, "", "SET"], [13, 2, 1, "", "STRING"], [13, 2, 1, "", "TIMEDELTA"], [13, 2, 1, "id0", "UNDEFINED"], [13, 3, 1, "", "from_name"], [13, 3, 1, "", "from_type"], [13, 3, 1, "", "from_value"], [13, 3, 1, "", "is_compatible"], [13, 3, 1, "", "is_definition"]], "debug_repl": [[2, 7, 1, "cmdoption-debug_repl-edit-console", "--edit-console"], [2, 7, 1, "cmdoption-debug_repl-edit-file", "--edit-file"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:exception", "6": "py:data", "7": "std:cmdoption"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["std", "cmdoption", "program option"]}, "titleterms": {"data": [0, 3, 8, 15], "attribut": [0, 3], "builtin": [0, 3, 6, 14], "float": [0, 14, 15], "1": [0, 1], "chang": [1, 3], "log": 1, "version": 1, "4": 1, "x": 1, "0": 1, "3": 1, "2": 1, "6": 1, "5": 1, "debug": 2, "repl": 2, "cli": 2, "argument": 2, "configur": 2, "exampl": [2, 4], "usag": [2, 3, 4], "get": 3, "start": 3, "basic": 3, "back": 3, "object": 3, "advanc": 3, "set": 3, "A": 3, "default": 3, "valu": [3, 14], "custom": 3, "resolv": 3, "suggest": [3, 12], "type": [3, 13, 15], "hint": 3, "compound": [3, 15], "function": [3, 7, 11, 12, 13, 14, 15], "defin": 3, "from": 3, "dictionari": 3, "symbol": [3, 14], "rule": [3, 4, 14], "inspect": 3, "engin": [4, 7], "document": 4, "content": 4, "indic": 4, "tabl": 4, "ast": 5, "class": [5, 7, 10, 13], "base": 5, "left": 5, "oper": [5, 14], "right": 5, "express": [5, 14], "liter": [5, 14], "miscellan": 5, "error": 8, "except": 8, "hierarchi": 8, "rule_engin": 9, "parser": 10, "util": 11, "syntax": 14, "grammar": 14, "support": 14, "accessor": 14, "arrai": 14, "comprehens": 14, "ternari": 14, "call": 14, "reserv": 14, "keyword": 14, "datetim": 14, "timedelta": [14, 15], "comment": 14, "math": 14, "relat": 14, "regular": 14, "timestamp": 14}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinx": 60}, "alltitles": {"Data Attributes": [[0, "data-attributes"]], "Builtin Attributes": [[0, "builtin-attributes"]], "FLOAT Attributes 1": [[0, "float-attributes-1"]], "Change Log": [[1, "change-log"]], "Version 4.x.x": [[1, "version-4-x-x"]], "Version 4.4.0": [[1, "version-4-4-0"]], "Version 4.3.0": [[1, "version-4-3-0"]], "Version 4.2.0": [[1, "version-4-2-0"]], "Version 4.1.0": [[1, "version-4-1-0"]], "Version 4.0.0": [[1, "version-4-0-0"]], "Version 3.x.x": [[1, "version-3-x-x"]], "Version 3.6.0": [[1, "version-3-6-0"]], "Version 3.5.0": [[1, "version-3-5-0"]], "Version 3.4.0": [[1, "version-3-4-0"]], "Version 3.3.0": [[1, "version-3-3-0"]], "Version 3.2.0": [[1, "version-3-2-0"]], "Version 3.1.0": [[1, "version-3-1-0"]], "Version 3.0.0": [[1, "version-3-0-0"]], "Version 2.x.x": [[1, "version-2-x-x"]], "Version 2.4.0": [[1, "version-2-4-0"]], "Version 2.3.0": [[1, "version-2-3-0"]], "Version 2.2.0": [[1, "version-2-2-0"]], "Version 2.1.0": [[1, "version-2-1-0"]], "Version 2.0.0": [[1, "version-2-0-0"]], "Version 1.x.x": [[1, "version-1-x-x"]], "Version 1.1.0": [[1, "version-1-1-0"]], "Version 1.0.0": [[1, "version-1-0-0"]], "Debug REPL": [[2, "debug-repl"]], "CLI Arguments": [[2, "cli-arguments"]], "Configuration": [[2, "configuration"]], "Example Usage": [[2, "example-usage"]], "Getting Started": [[3, "getting-started"]], "Basic Usage": [[3, "basic-usage"]], "Attribute-Backed Objects": [[3, "attribute-backed-objects"]], "Advanced Usage": [[3, "advanced-usage"]], "Setting A Default Value": [[3, "setting-a-default-value"]], "Custom Resolvers": [[3, "custom-resolvers"]], "Suggestions": [[3, "suggestions"]], "Type Hinting": [[3, "type-hinting"]], "Compound Data Types": [[3, "compound-data-types"]], "Function Data Types": [[3, "function-data-types"]], "Defining Types From A Dictionary": [[3, "defining-types-from-a-dictionary"]], "Changing Builtin Symbols": [[3, "changing-builtin-symbols"]], "Rule Inspection": [[3, "rule-inspection"]], "Rule Engine Documentation": [[4, "rule-engine-documentation"]], "Usage Example": [[4, "usage-example"]], "Contents:": [[4, null]], "Indices and tables": [[4, "indices-and-tables"]], "ast": [[5, "module-rule_engine.ast"]], "Classes": [[5, "classes"], [7, "classes"], [10, "classes"], [13, "classes"]], "Base Classes": [[5, "base-classes"]], "Left-Operator-Right Expressions": [[5, "left-operator-right-expressions"]], "Literal Expressions": [[5, "literal-expressions"]], "Miscellaneous Expressions": [[5, "miscellaneous-expressions"]], "builtins": [[6, "module-rule_engine.builtins"]], "engine": [[7, "module-rule_engine.engine"]], "Functions": [[7, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"]], "errors": [[8, "module-rule_engine.errors"]], "Data": [[8, "data"]], "Exceptions": [[8, "exceptions"]], "Exception Hierarchy": [[8, "exception-hierarchy"]], "rule_engine": [[9, "rule-engine"]], "parser": [[10, "module-rule_engine.parser"]], "utilities": [[11, "module-rule_engine.parser.utilities"]], "suggestions": [[12, "module-rule_engine.suggestions"]], "types": [[13, "module-rule_engine.types"]], "Rule Syntax": [[14, "rule-syntax"]], "Grammar": [[14, "grammar"]], "Supported Operations": [[14, "supported-operations"]], "Accessor Operators": [[14, "accessor-operators"]], "Array Comprehension": [[14, "array-comprehension"]], "Ternary Operators": [[14, "ternary-operators"]], "Function Calls": [[14, "function-calls"]], "Reserved Keywords": [[14, "reserved-keywords"]], "Literal Values": [[14, "literal-values"]], "Literal DATETIME Values": [[14, "literal-datetime-values"]], "Literal FLOAT Values": [[14, "literal-float-values"]], "Literal TIMEDELTA Values": [[14, "literal-timedelta-values"]], "Comments": [[14, "comments"]], "Builtin Symbols": [[14, "builtin-symbols"]], "Math Related": [[14, "math-related"]], "Regular Expression Related": [[14, "regular-expression-related"]], "Timestamp Related": [[14, "timestamp-related"]], "Data Types": [[15, "data-types"]], "Compound Types": [[15, "compound-types"]], "FLOAT": [[15, "float"]], "FUNCTION": [[15, "function"]], "TIMEDELTA": [[15, "timedelta"]]}, "indexentries": {"--edit-console": [[2, "cmdoption-debug_repl-edit-console"]], "--edit-file": [[2, "cmdoption-debug_repl-edit-file"]], "debug_repl command line option": [[2, "cmdoption-debug_repl-edit-console"], [2, "cmdoption-debug_repl-edit-file"]], "addexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.AddExpression"]], "arithmeticcomparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArithmeticComparisonExpression"]], "arithmeticexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArithmeticExpression"]], "arrayexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArrayExpression"]], "assignment (class in rule_engine.ast)": [[5, "rule_engine.ast.Assignment"]], "bitwiseexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BitwiseExpression"]], "bitwiseshiftexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BitwiseShiftExpression"]], "booleanexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BooleanExpression"]], "comparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ComparisonExpression"]], "comprehensionexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ComprehensionExpression"]], "containsexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ContainsExpression"]], "datetimeexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.DatetimeExpression"]], "expressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.ExpressionBase"]], "floatexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.FloatExpression"]], "fuzzycomparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.FuzzyComparisonExpression"]], "getattributeexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetAttributeExpression"]], "getitemexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetItemExpression"]], "getsliceexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetSliceExpression"]], "leftoperatorrightexpressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase"]], "literalexpressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.LiteralExpressionBase"]], "logicexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.LogicExpression"]], "mappingexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.MappingExpression"]], "nullexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.NullExpression"]], "setexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SetExpression"]], "statement (class in rule_engine.ast)": [[5, "rule_engine.ast.Statement"]], "stringexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.StringExpression"]], "subtractexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SubtractExpression"]], "symbolexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SymbolExpression"]], "ternaryexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.TernaryExpression"]], "timedeltaexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.TimedeltaExpression"]], "unaryexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.UnaryExpression"]], "__init__() (assignment method)": [[5, "rule_engine.ast.Assignment.__init__"]], "__init__() (leftoperatorrightexpressionbase method)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase.__init__"]], "__init__() (literalexpressionbase method)": [[5, "rule_engine.ast.LiteralExpressionBase.__init__"]], "compatible_types (leftoperatorrightexpressionbase attribute)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase.compatible_types"]], "module": [[5, "module-rule_engine.ast"], [6, "module-rule_engine.builtins"], [7, "module-rule_engine.engine"], [8, "module-rule_engine.errors"], [10, "module-rule_engine.parser"], [11, "module-rule_engine.parser.utilities"], [12, "module-rule_engine.suggestions"], [13, "module-rule_engine.types"]], "name (assignment attribute)": [[5, "rule_engine.ast.Assignment.name"]], "result_type (addexpression attribute)": [[5, "rule_engine.ast.AddExpression.result_type"]], "result_type (arithmeticcomparisonexpression attribute)": [[5, "rule_engine.ast.ArithmeticComparisonExpression.result_type"]], "result_type (arithmeticexpression attribute)": [[5, "rule_engine.ast.ArithmeticExpression.result_type"]], "result_type (arrayexpression attribute)": [[5, "rule_engine.ast.ArrayExpression.result_type"]], "result_type (bitwiseexpression attribute)": [[5, "rule_engine.ast.BitwiseExpression.result_type"]], "result_type (bitwiseshiftexpression attribute)": [[5, "rule_engine.ast.BitwiseShiftExpression.result_type"]], "result_type (booleanexpression attribute)": [[5, "rule_engine.ast.BooleanExpression.result_type"]], "result_type (comparisonexpression attribute)": [[5, "rule_engine.ast.ComparisonExpression.result_type"]], "result_type (comprehensionexpression attribute)": [[5, "rule_engine.ast.ComprehensionExpression.result_type"]], "result_type (containsexpression attribute)": [[5, "rule_engine.ast.ContainsExpression.result_type"]], "result_type (datetimeexpression attribute)": [[5, "rule_engine.ast.DatetimeExpression.result_type"]], "result_type (expressionbase attribute)": [[5, "rule_engine.ast.ExpressionBase.result_type"]], "result_type (floatexpression attribute)": [[5, "rule_engine.ast.FloatExpression.result_type"]], "result_type (fuzzycomparisonexpression attribute)": [[5, "rule_engine.ast.FuzzyComparisonExpression.result_type"]], "result_type (getattributeexpression attribute)": [[5, "rule_engine.ast.GetAttributeExpression.result_type"]], "result_type (getitemexpression attribute)": [[5, "rule_engine.ast.GetItemExpression.result_type"]], "result_type (getsliceexpression attribute)": [[5, "rule_engine.ast.GetSliceExpression.result_type"]], "result_type (logicexpression attribute)": [[5, "rule_engine.ast.LogicExpression.result_type"]], "result_type (mappingexpression attribute)": [[5, "rule_engine.ast.MappingExpression.result_type"]], "result_type (nullexpression attribute)": [[5, "rule_engine.ast.NullExpression.result_type"]], "result_type (setexpression attribute)": [[5, "rule_engine.ast.SetExpression.result_type"]], "result_type (stringexpression attribute)": [[5, "rule_engine.ast.StringExpression.result_type"]], "result_type (subtractexpression attribute)": [[5, "rule_engine.ast.SubtractExpression.result_type"]], "result_type (symbolexpression attribute)": [[5, "rule_engine.ast.SymbolExpression.result_type"]], "result_type (ternaryexpression attribute)": [[5, "rule_engine.ast.TernaryExpression.result_type"]], "result_type (timedeltaexpression attribute)": [[5, "rule_engine.ast.TimedeltaExpression.result_type"]], "result_type (unaryexpression attribute)": [[5, "rule_engine.ast.UnaryExpression.result_type"]], "rule_engine.ast": [[5, "module-rule_engine.ast"]], "value (assignment attribute)": [[5, "rule_engine.ast.Assignment.value"]], "value_type (assignment attribute)": [[5, "rule_engine.ast.Assignment.value_type"]], "builtins (class in rule_engine.builtins)": [[6, "rule_engine.builtins.Builtins"]], "__init__() (builtins method)": [[6, "rule_engine.builtins.Builtins.__init__"]], "from_defaults() (builtins class method)": [[6, "rule_engine.builtins.Builtins.from_defaults"]], "resolve_type() (builtins method)": [[6, "rule_engine.builtins.Builtins.resolve_type"]], "rule_engine.builtins": [[6, "module-rule_engine.builtins"]], "scope_name (builtins attribute)": [[6, "rule_engine.builtins.Builtins.scope_name"]], "context (class in rule_engine.engine)": [[7, "rule_engine.engine.Context"]], "rule (class in rule_engine.engine)": [[7, "rule_engine.engine.Rule"]], "__init__() (context method)": [[7, "rule_engine.engine.Context.__init__"]], "__init__() (rule method)": [[7, "rule_engine.engine.Rule.__init__"]], "assignments() (context method)": [[7, "rule_engine.engine.Context.assignments"]], "builtins (context attribute)": [[7, "rule_engine.engine.Context.builtins"]], "decimal_context (context attribute)": [[7, "rule_engine.engine.Context.decimal_context"]], "default_timezone (context attribute)": [[7, "rule_engine.engine.Context.default_timezone"]], "default_value (context attribute)": [[7, "rule_engine.engine.Context.default_value"]], "evaluate() (rule method)": [[7, "rule_engine.engine.Rule.evaluate"]], "filter() (rule method)": [[7, "rule_engine.engine.Rule.filter"]], "is_valid() (rule class method)": [[7, "rule_engine.engine.Rule.is_valid"]], "matches() (rule method)": [[7, "rule_engine.engine.Rule.matches"]], "parser (rule attribute)": [[7, "rule_engine.engine.Rule.parser"]], "regex_flags (context attribute)": [[7, "rule_engine.engine.Context.regex_flags"]], "resolve() (context method)": [[7, "rule_engine.engine.Context.resolve"]], "resolve_attribute() (context method)": [[7, "rule_engine.engine.Context.resolve_attribute"]], "resolve_attribute() (in module rule_engine.engine)": [[7, "rule_engine.engine.resolve_attribute"]], "resolve_attribute_type() (context method)": [[7, "rule_engine.engine.Context.resolve_attribute_type"]], "resolve_item() (in module rule_engine.engine)": [[7, "rule_engine.engine.resolve_item"]], "resolve_type() (context method)": [[7, "rule_engine.engine.Context.resolve_type"]], "rule_engine.engine": [[7, "module-rule_engine.engine"]], "symbols (context attribute)": [[7, "rule_engine.engine.Context.symbols"]], "to_graphviz() (rule method)": [[7, "rule_engine.engine.Rule.to_graphviz"]], "type_resolver_from_dict() (in module rule_engine.engine)": [[7, "rule_engine.engine.type_resolver_from_dict"]], "attributeresolutionerror": [[8, "rule_engine.errors.AttributeResolutionError"]], "attributetypeerror": [[8, "rule_engine.errors.AttributeTypeError"]], "datetimesyntaxerror": [[8, "rule_engine.errors.DatetimeSyntaxError"]], "engineerror": [[8, "rule_engine.errors.EngineError"]], "evaluationerror": [[8, "rule_engine.errors.EvaluationError"]], "floatsyntaxerror": [[8, "rule_engine.errors.FloatSyntaxError"]], "functioncallerror": [[8, "rule_engine.errors.FunctionCallError"]], "lookuperror": [[8, "rule_engine.errors.LookupError"]], "regexsyntaxerror": [[8, "rule_engine.errors.RegexSyntaxError"]], "rulesyntaxerror": [[8, "rule_engine.errors.RuleSyntaxError"]], "symbolresolutionerror": [[8, "rule_engine.errors.SymbolResolutionError"]], "symboltypeerror": [[8, "rule_engine.errors.SymbolTypeError"]], "syntaxerror": [[8, "rule_engine.errors.SyntaxError"]], "timedeltasyntaxerror": [[8, "rule_engine.errors.TimedeltaSyntaxError"]], "undefined (in module rule_engine.errors)": [[8, "rule_engine.errors.UNDEFINED"]], "__init__() (attributeresolutionerror method)": [[8, "rule_engine.errors.AttributeResolutionError.__init__"]], "__init__() (attributetypeerror method)": [[8, "rule_engine.errors.AttributeTypeError.__init__"]], "__init__() (datetimesyntaxerror method)": [[8, "rule_engine.errors.DatetimeSyntaxError.__init__"]], "__init__() (engineerror method)": [[8, "rule_engine.errors.EngineError.__init__"]], "__init__() (floatsyntaxerror method)": [[8, "rule_engine.errors.FloatSyntaxError.__init__"]], "__init__() (functioncallerror method)": [[8, "rule_engine.errors.FunctionCallError.__init__"]], "__init__() (lookuperror method)": [[8, "rule_engine.errors.LookupError.__init__"]], "__init__() (regexsyntaxerror method)": [[8, "rule_engine.errors.RegexSyntaxError.__init__"]], "__init__() (rulesyntaxerror method)": [[8, "rule_engine.errors.RuleSyntaxError.__init__"]], "__init__() (symbolresolutionerror method)": [[8, "rule_engine.errors.SymbolResolutionError.__init__"]], "__init__() (symboltypeerror method)": [[8, "rule_engine.errors.SymbolTypeError.__init__"]], "__init__() (timedeltasyntaxerror method)": [[8, "rule_engine.errors.TimedeltaSyntaxError.__init__"]], "attribute_name (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.attribute_name"]], "attribute_name (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.attribute_name"]], "container (lookuperror attribute)": [[8, "rule_engine.errors.LookupError.container"]], "error (functioncallerror attribute)": [[8, "rule_engine.errors.FunctionCallError.error"]], "error (regexsyntaxerror attribute)": [[8, "rule_engine.errors.RegexSyntaxError.error"]], "expected_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.expected_type"]], "expected_type (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.expected_type"]], "is_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.is_type"]], "is_type (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.is_type"]], "is_value (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.is_value"]], "is_value (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.is_value"]], "item (lookuperror attribute)": [[8, "rule_engine.errors.LookupError.item"]], "message (engineerror attribute)": [[8, "rule_engine.errors.EngineError.message"]], "object (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.object"]], "object_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.object_type"]], "rule_engine.errors": [[8, "module-rule_engine.errors"]], "suggestion (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.suggestion"]], "suggestion (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.suggestion"]], "symbol_name (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.symbol_name"]], "symbol_name (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.symbol_name"]], "symbol_scope (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.symbol_scope"]], "thing (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.thing"]], "thing (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.thing"]], "token (rulesyntaxerror attribute)": [[8, "rule_engine.errors.RuleSyntaxError.token"]], "value (datetimesyntaxerror attribute)": [[8, "rule_engine.errors.DatetimeSyntaxError.value"]], "value (floatsyntaxerror attribute)": [[8, "rule_engine.errors.FloatSyntaxError.value"]], "value (regexsyntaxerror attribute)": [[8, "rule_engine.errors.RegexSyntaxError.value"]], "value (timedeltasyntaxerror attribute)": [[8, "rule_engine.errors.TimedeltaSyntaxError.value"]], "parser (class in rule_engine.parser)": [[10, "rule_engine.parser.Parser"]], "parserbase (class in rule_engine.parser)": [[10, "rule_engine.parser.ParserBase"]], "__init__() (parser method)": [[10, "rule_engine.parser.Parser.__init__"]], "__init__() (parserbase method)": [[10, "rule_engine.parser.ParserBase.__init__"]], "parse() (parserbase method)": [[10, "rule_engine.parser.ParserBase.parse"]], "precedence (parserbase attribute)": [[10, "rule_engine.parser.ParserBase.precedence"]], "reserved_words (parserbase attribute)": [[10, "rule_engine.parser.ParserBase.reserved_words"]], "rule_engine.parser": [[10, "module-rule_engine.parser"]], "parse_datetime() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_datetime"]], "parse_float() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_float"]], "parse_timedelta() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_timedelta"]], "rule_engine.parser.utilities": [[11, "module-rule_engine.parser.utilities"]], "rule_engine.suggestions": [[12, "module-rule_engine.suggestions"]], "suggest_symbol() (in module rule_engine.suggestions)": [[12, "rule_engine.suggestions.suggest_symbol"]], "array() (datatype static method)": [[13, "rule_engine.types.DataType.ARRAY"]], "boolean (datatype attribute)": [[13, "rule_engine.types.DataType.BOOLEAN"]], "datetime (datatype attribute)": [[13, "rule_engine.types.DataType.DATETIME"]], "datatype (class in rule_engine.types)": [[13, "rule_engine.types.DataType"]], "float (datatype attribute)": [[13, "rule_engine.types.DataType.FLOAT"]], "function() (datatype static method)": [[13, "rule_engine.types.DataType.FUNCTION"]], "mapping() (datatype static method)": [[13, "rule_engine.types.DataType.MAPPING"]], "null (datatype attribute)": [[13, "rule_engine.types.DataType.NULL"]], "set() (datatype static method)": [[13, "rule_engine.types.DataType.SET"]], "string (datatype attribute)": [[13, "rule_engine.types.DataType.STRING"]], "timedelta (datatype attribute)": [[13, "rule_engine.types.DataType.TIMEDELTA"]], "undefined (datatype attribute)": [[13, "id0"], [13, "rule_engine.types.DataType.UNDEFINED"]], "coerce_value() (in module rule_engine.types)": [[13, "rule_engine.types.coerce_value"]], "from_name() (datatype class method)": [[13, "rule_engine.types.DataType.from_name"]], "from_type() (datatype class method)": [[13, "rule_engine.types.DataType.from_type"]], "from_value() (datatype class method)": [[13, "rule_engine.types.DataType.from_value"]], "is_compatible() (datatype class method)": [[13, "rule_engine.types.DataType.is_compatible"]], "is_definition() (datatype class method)": [[13, "rule_engine.types.DataType.is_definition"]], "is_integer_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_integer_number"]], "is_natural_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_natural_number"]], "is_numeric() (in module rule_engine.types)": [[13, "rule_engine.types.is_numeric"]], "is_real_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_real_number"]], "iterable_member_value_type() (in module rule_engine.types)": [[13, "rule_engine.types.iterable_member_value_type"]], "rule_engine.types": [[13, "module-rule_engine.types"]]}})