Search.setIndex({"alltitles": {"Accessor Operators": [[14, "accessor-operators"]], "Advanced Usage": [[3, "advanced-usage"]], "Array Comprehension": [[14, "array-comprehension"]], "Attribute-Backed Objects": [[3, "attribute-backed-objects"]], "Base Classes": [[5, "base-classes"]], "Basic Usage": [[3, "basic-usage"]], "Builtin Attributes": [[0, "builtin-attributes"]], "Builtin Symbols": [[14, "builtin-symbols"]], "CLI Arguments": [[2, "cli-arguments"]], "Change Log": [[1, "change-log"]], "Changing Builtin Symbols": [[3, "changing-builtin-symbols"]], "Classes": [[5, "classes"], [7, "classes"], [10, "classes"], [13, "classes"]], "Comments": [[14, "comments"]], "Compound Data Types": [[3, "compound-data-types"]], "Compound Types": [[15, "compound-types"]], "Configuration": [[2, "configuration"]], "Contents:": [[4, null]], "Custom Resolvers": [[3, "custom-resolvers"]], "Data": [[8, "data"]], "Data Attributes": [[0, "data-attributes"]], "Data Types": [[15, "data-types"]], "Debug REPL": [[2, "debug-repl"]], "Defining Types From A Dictionary": [[3, "defining-types-from-a-dictionary"]], "Encoding and Decoding": [[0, "encoding-and-decoding"]], "Example Usage": [[2, "example-usage"]], "Exception Hierarchy": [[8, "exception-hierarchy"]], "Exceptions": [[8, "exceptions"]], "FLOAT": [[15, "float"]], "FLOAT Attributes 1": [[0, "float-attributes-1"]], "FUNCTION": [[15, "function"]], "Function Calls": [[14, "function-calls"]], "Function Data Types": [[3, "function-data-types"]], "Functions": [[7, "functions"], [11, "functions"], [12, "functions"], [13, "functions"], [14, "functions"]], "Getting Started": [[3, "getting-started"]], "Grammar": [[14, "grammar"]], "Indices and tables": [[4, "indices-and-tables"]], "Left-Operator-Right Expressions": [[5, "left-operator-right-expressions"]], "Literal DATETIME Values": [[14, "literal-datetime-values"]], "Literal Expressions": [[5, "literal-expressions"]], "Literal FLOAT Values": [[14, "literal-float-values"]], "Literal TIMEDELTA Values": [[14, "literal-timedelta-values"]], "Literal Values": [[14, "literal-values"]], "Math Related": [[14, "math-related"]], "Miscellaneous Expressions": [[5, "miscellaneous-expressions"]], "Object Methods": [[0, "object-methods"]], "Regular Expression Related": [[14, "regular-expression-related"]], "Reserved Keywords": [[14, "reserved-keywords"]], "Rule Engine Documentation": [[4, "rule-engine-documentation"]], "Rule Inspection": [[3, "rule-inspection"]], "Rule Syntax": [[14, "rule-syntax"]], "Setting A Default Value": [[3, "setting-a-default-value"]], "Suggestions": [[3, "suggestions"]], "Supported Operations": [[14, "supported-operations"]], "TIMEDELTA": [[15, "timedelta"]], "Ternary Operators": [[14, "ternary-operators"]], "Timestamp Related": [[14, "timestamp-related"]], "Type Hinting": [[3, "type-hinting"]], "Usage Example": [[4, "usage-example"]], "Version 1.0.0": [[1, "version-1-0-0"]], "Version 1.1.0": [[1, "version-1-1-0"]], "Version 1.x.x": [[1, "version-1-x-x"]], "Version 2.0.0": [[1, "version-2-0-0"]], "Version 2.1.0": [[1, "version-2-1-0"]], "Version 2.2.0": [[1, "version-2-2-0"]], "Version 2.3.0": [[1, "version-2-3-0"]], "Version 2.4.0": [[1, "version-2-4-0"]], "Version 2.x.x": [[1, "version-2-x-x"]], "Version 3.0.0": [[1, "version-3-0-0"]], "Version 3.1.0": [[1, "version-3-1-0"]], "Version 3.2.0": [[1, "version-3-2-0"]], "Version 3.3.0": [[1, "version-3-3-0"]], "Version 3.4.0": [[1, "version-3-4-0"]], "Version 3.5.0": [[1, "version-3-5-0"]], "Version 3.6.0": [[1, "version-3-6-0"]], "Version 3.x.x": [[1, "version-3-x-x"]], "Version 4.0.0": [[1, "version-4-0-0"]], "Version 4.1.0": [[1, "version-4-1-0"]], "Version 4.2.0": [[1, "version-4-2-0"]], "Version 4.3.0": [[1, "version-4-3-0"]], "Version 4.4.0": [[1, "version-4-4-0"]], "Version 4.5.0": [[1, "version-4-5-0"]], "Version 4.x.x": [[1, "version-4-x-x"]], "ast": [[5, "module-rule_engine.ast"]], "builtins": [[6, "module-rule_engine.builtins"]], "engine": [[7, "module-rule_engine.engine"]], "errors": [[8, "module-rule_engine.errors"]], "parser": [[10, "module-rule_engine.parser"]], "rule_engine": [[9, "rule-engine"]], "suggestions": [[12, "module-rule_engine.suggestions"]], "types": [[13, "module-rule_engine.types"]], "utilities": [[11, "module-rule_engine.parser.utilities"]]}, "docnames": ["attributes", "change_log", "debug_repl", "getting_started", "index", "rule_engine/ast", "rule_engine/builtins", "rule_engine/engine", "rule_engine/errors", "rule_engine/index", "rule_engine/parser/index", "rule_engine/parser/utilities", "rule_engine/suggestions", "rule_engine/types", "syntax", "types"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["attributes.rst", "change_log.rst", "debug_repl.rst", "getting_started.rst", "index.rst", "rule_engine/ast.rst", "rule_engine/builtins.rst", "rule_engine/engine.rst", "rule_engine/errors.rst", "rule_engine/index.rst", "rule_engine/parser/index.rst", "rule_engine/parser/utilities.rst", "rule_engine/suggestions.rst", "rule_engine/types.rst", "syntax.rst", "types.rst"], "indexentries": {"--edit-console": [[2, "cmdoption-debug_repl-edit-console", false]], "--edit-file": [[2, "cmdoption-debug_repl-edit-file", false]], "__init__() (assignment method)": [[5, "rule_engine.ast.Assignment.__init__", false]], "__init__() (attributeresolutionerror method)": [[8, "rule_engine.errors.AttributeResolutionError.__init__", false]], "__init__() (attributetypeerror method)": [[8, "rule_engine.errors.AttributeTypeError.__init__", false]], "__init__() (builtins method)": [[6, "rule_engine.builtins.Builtins.__init__", false]], "__init__() (bytessyntaxerror method)": [[8, "rule_engine.errors.BytesSyntaxError.__init__", false]], "__init__() (context method)": [[7, "rule_engine.engine.Context.__init__", false]], "__init__() (datetimesyntaxerror method)": [[8, "rule_engine.errors.DatetimeSyntaxError.__init__", false]], "__init__() (engineerror method)": [[8, "rule_engine.errors.EngineError.__init__", false]], "__init__() (floatsyntaxerror method)": [[8, "rule_engine.errors.FloatSyntaxError.__init__", false]], "__init__() (functioncallerror method)": [[8, "rule_engine.errors.FunctionCallError.__init__", false]], "__init__() (leftoperatorrightexpressionbase method)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase.__init__", false]], "__init__() (literalexpressionbase method)": [[5, "rule_engine.ast.LiteralExpressionBase.__init__", false]], "__init__() (lookuperror method)": [[8, "rule_engine.errors.LookupError.__init__", false]], "__init__() (parser method)": [[10, "rule_engine.parser.Parser.__init__", false]], "__init__() (parserbase method)": [[10, "rule_engine.parser.ParserBase.__init__", false]], "__init__() (regexsyntaxerror method)": [[8, "rule_engine.errors.RegexSyntaxError.__init__", false]], "__init__() (rule method)": [[7, "rule_engine.engine.Rule.__init__", false]], "__init__() (rulesyntaxerror method)": [[8, "rule_engine.errors.RuleSyntaxError.__init__", false]], "__init__() (stringsyntaxerror method)": [[8, "rule_engine.errors.StringSyntaxError.__init__", false]], "__init__() (symbolresolutionerror method)": [[8, "rule_engine.errors.SymbolResolutionError.__init__", false]], "__init__() (symboltypeerror method)": [[8, "rule_engine.errors.SymbolTypeError.__init__", false]], "__init__() (timedeltasyntaxerror method)": [[8, "rule_engine.errors.TimedeltaSyntaxError.__init__", false]], "addexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.AddExpression", false]], "arithmeticcomparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArithmeticComparisonExpression", false]], "arithmeticexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArithmeticExpression", false]], "array() (datatype static method)": [[13, "rule_engine.types.DataType.ARRAY", false]], "arrayexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ArrayExpression", false]], "assignment (class in rule_engine.ast)": [[5, "rule_engine.ast.Assignment", false]], "assignments() (context method)": [[7, "rule_engine.engine.Context.assignments", false]], "attribute_name (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.attribute_name", false]], "attribute_name (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.attribute_name", false]], "attributeresolutionerror": [[8, "rule_engine.errors.AttributeResolutionError", false]], "attributetypeerror": [[8, "rule_engine.errors.AttributeTypeError", false]], "bitwiseexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BitwiseExpression", false]], "bitwiseshiftexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BitwiseShiftExpression", false]], "boolean (datatype attribute)": [[13, "rule_engine.types.DataType.BOOLEAN", false]], "booleanexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BooleanExpression", false]], "builtins (class in rule_engine.builtins)": [[6, "rule_engine.builtins.Builtins", false]], "builtins (context attribute)": [[7, "rule_engine.engine.Context.builtins", false]], "bytes (datatype attribute)": [[13, "rule_engine.types.DataType.BYTES", false]], "bytesexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.BytesExpression", false]], "bytessyntaxerror": [[8, "rule_engine.errors.BytesSyntaxError", false]], "coerce_value() (in module rule_engine.types)": [[13, "rule_engine.types.coerce_value", false]], "comparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ComparisonExpression", false]], "compatible_types (leftoperatorrightexpressionbase attribute)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase.compatible_types", false]], "comprehensionexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ComprehensionExpression", false]], "container (lookuperror attribute)": [[8, "rule_engine.errors.LookupError.container", false]], "containsexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.ContainsExpression", false]], "context (class in rule_engine.engine)": [[7, "rule_engine.engine.Context", false]], "datatype (class in rule_engine.types)": [[13, "rule_engine.types.DataType", false]], "datetime (datatype attribute)": [[13, "rule_engine.types.DataType.DATETIME", false]], "datetimeexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.DatetimeExpression", false]], "datetimesyntaxerror": [[8, "rule_engine.errors.DatetimeSyntaxError", false]], "debug_repl command line option": [[2, "cmdoption-debug_repl-edit-console", false], [2, "cmdoption-debug_repl-edit-file", false]], "decimal_context (context attribute)": [[7, "rule_engine.engine.Context.decimal_context", false]], "default_timezone (context attribute)": [[7, "rule_engine.engine.Context.default_timezone", false]], "default_value (context attribute)": [[7, "rule_engine.engine.Context.default_value", false]], "engineerror": [[8, "rule_engine.errors.EngineError", false]], "error (functioncallerror attribute)": [[8, "rule_engine.errors.FunctionCallError.error", false]], "error (regexsyntaxerror attribute)": [[8, "rule_engine.errors.RegexSyntaxError.error", false]], "evaluate() (rule method)": [[7, "rule_engine.engine.Rule.evaluate", false]], "evaluationerror": [[8, "rule_engine.errors.EvaluationError", false]], "expected_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.expected_type", false]], "expected_type (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.expected_type", false]], "expressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.ExpressionBase", false]], "filter() (rule method)": [[7, "rule_engine.engine.Rule.filter", false]], "float (datatype attribute)": [[13, "rule_engine.types.DataType.FLOAT", false]], "floatexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.FloatExpression", false]], "floatsyntaxerror": [[8, "rule_engine.errors.FloatSyntaxError", false]], "from_defaults() (builtins class method)": [[6, "rule_engine.builtins.Builtins.from_defaults", false]], "from_name() (datatype class method)": [[13, "rule_engine.types.DataType.from_name", false]], "from_type() (datatype class method)": [[13, "rule_engine.types.DataType.from_type", false]], "from_value() (datatype class method)": [[13, "rule_engine.types.DataType.from_value", false]], "function() (datatype static method)": [[13, "rule_engine.types.DataType.FUNCTION", false]], "functioncallerror": [[8, "rule_engine.errors.FunctionCallError", false]], "functionexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.FunctionExpression", false]], "fuzzycomparisonexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.FuzzyComparisonExpression", false]], "getattributeexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetAttributeExpression", false]], "getitemexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetItemExpression", false]], "getsliceexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.GetSliceExpression", false]], "is_compatible() (datatype class method)": [[13, "rule_engine.types.DataType.is_compatible", false]], "is_definition() (datatype class method)": [[13, "rule_engine.types.DataType.is_definition", false]], "is_integer_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_integer_number", false]], "is_natural_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_natural_number", false]], "is_numeric() (in module rule_engine.types)": [[13, "rule_engine.types.is_numeric", false]], "is_real_number() (in module rule_engine.types)": [[13, "rule_engine.types.is_real_number", false]], "is_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.is_type", false]], "is_type (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.is_type", false]], "is_valid() (rule class method)": [[7, "rule_engine.engine.Rule.is_valid", false]], "is_value (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.is_value", false]], "is_value (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.is_value", false]], "item (lookuperror attribute)": [[8, "rule_engine.errors.LookupError.item", false]], "iterable_member_value_type() (in module rule_engine.types)": [[13, "rule_engine.types.iterable_member_value_type", false]], "leftoperatorrightexpressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.LeftOperatorRightExpressionBase", false]], "literalexpressionbase (class in rule_engine.ast)": [[5, "rule_engine.ast.LiteralExpressionBase", false]], "logicexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.LogicExpression", false]], "lookuperror": [[8, "rule_engine.errors.LookupError", false]], "mapping() (datatype static method)": [[13, "rule_engine.types.DataType.MAPPING", false]], "mappingexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.MappingExpression", false]], "matches() (rule method)": [[7, "rule_engine.engine.Rule.matches", false]], "message (engineerror attribute)": [[8, "rule_engine.errors.EngineError.message", false]], "module": [[5, "module-rule_engine.ast", false], [6, "module-rule_engine.builtins", false], [7, "module-rule_engine.engine", false], [8, "module-rule_engine.errors", false], [10, "module-rule_engine.parser", false], [11, "module-rule_engine.parser.utilities", false], [12, "module-rule_engine.suggestions", false], [13, "module-rule_engine.types", false]], "name (assignment attribute)": [[5, "rule_engine.ast.Assignment.name", false]], "null (datatype attribute)": [[13, "rule_engine.types.DataType.NULL", false]], "nullexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.NullExpression", false]], "object (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.object", false]], "object_type (attributetypeerror attribute)": [[8, "rule_engine.errors.AttributeTypeError.object_type", false]], "parse() (parserbase method)": [[10, "rule_engine.parser.ParserBase.parse", false]], "parse_datetime() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_datetime", false]], "parse_float() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_float", false]], "parse_timedelta() (in module rule_engine.parser.utilities)": [[11, "rule_engine.parser.utilities.parse_timedelta", false]], "parser (class in rule_engine.parser)": [[10, "rule_engine.parser.Parser", false]], "parser (rule attribute)": [[7, "rule_engine.engine.Rule.parser", false]], "parserbase (class in rule_engine.parser)": [[10, "rule_engine.parser.ParserBase", false]], "precedence (parserbase attribute)": [[10, "rule_engine.parser.ParserBase.precedence", false]], "regex_flags (context attribute)": [[7, "rule_engine.engine.Context.regex_flags", false]], "regexsyntaxerror": [[8, "rule_engine.errors.RegexSyntaxError", false]], "reserved_words (parserbase attribute)": [[10, "rule_engine.parser.ParserBase.reserved_words", false]], "resolve() (context method)": [[7, "rule_engine.engine.Context.resolve", false]], "resolve_attribute() (context method)": [[7, "rule_engine.engine.Context.resolve_attribute", false]], "resolve_attribute() (in module rule_engine.engine)": [[7, "rule_engine.engine.resolve_attribute", false]], "resolve_attribute_type() (context method)": [[7, "rule_engine.engine.Context.resolve_attribute_type", false]], "resolve_item() (in module rule_engine.engine)": [[7, "rule_engine.engine.resolve_item", false]], "resolve_type() (builtins method)": [[6, "rule_engine.builtins.Builtins.resolve_type", false]], "resolve_type() (context method)": [[7, "rule_engine.engine.Context.resolve_type", false]], "result_type (addexpression attribute)": [[5, "rule_engine.ast.AddExpression.result_type", false]], "result_type (arithmeticcomparisonexpression attribute)": [[5, "rule_engine.ast.ArithmeticComparisonExpression.result_type", false]], "result_type (arithmeticexpression attribute)": [[5, "rule_engine.ast.ArithmeticExpression.result_type", false]], "result_type (arrayexpression attribute)": [[5, "rule_engine.ast.ArrayExpression.result_type", false]], "result_type (bitwiseexpression attribute)": [[5, "rule_engine.ast.BitwiseExpression.result_type", false]], "result_type (bitwiseshiftexpression attribute)": [[5, "rule_engine.ast.BitwiseShiftExpression.result_type", false]], "result_type (booleanexpression attribute)": [[5, "rule_engine.ast.BooleanExpression.result_type", false]], "result_type (bytesexpression attribute)": [[5, "rule_engine.ast.BytesExpression.result_type", false]], "result_type (comparisonexpression attribute)": [[5, "rule_engine.ast.ComparisonExpression.result_type", false]], "result_type (comprehensionexpression attribute)": [[5, "rule_engine.ast.ComprehensionExpression.result_type", false]], "result_type (containsexpression attribute)": [[5, "rule_engine.ast.ContainsExpression.result_type", false]], "result_type (datetimeexpression attribute)": [[5, "rule_engine.ast.DatetimeExpression.result_type", false]], "result_type (expressionbase attribute)": [[5, "rule_engine.ast.ExpressionBase.result_type", false]], "result_type (floatexpression attribute)": [[5, "rule_engine.ast.FloatExpression.result_type", false]], "result_type (functionexpression attribute)": [[5, "rule_engine.ast.FunctionExpression.result_type", false]], "result_type (fuzzycomparisonexpression attribute)": [[5, "rule_engine.ast.FuzzyComparisonExpression.result_type", false]], "result_type (getattributeexpression attribute)": [[5, "rule_engine.ast.GetAttributeExpression.result_type", false]], "result_type (getitemexpression attribute)": [[5, "rule_engine.ast.GetItemExpression.result_type", false]], "result_type (getsliceexpression attribute)": [[5, "rule_engine.ast.GetSliceExpression.result_type", false]], "result_type (logicexpression attribute)": [[5, "rule_engine.ast.LogicExpression.result_type", false]], "result_type (mappingexpression attribute)": [[5, "rule_engine.ast.MappingExpression.result_type", false]], "result_type (nullexpression attribute)": [[5, "rule_engine.ast.NullExpression.result_type", false]], "result_type (setexpression attribute)": [[5, "rule_engine.ast.SetExpression.result_type", false]], "result_type (stringexpression attribute)": [[5, "rule_engine.ast.StringExpression.result_type", false]], "result_type (subtractexpression attribute)": [[5, "rule_engine.ast.SubtractExpression.result_type", false]], "result_type (symbolexpression attribute)": [[5, "rule_engine.ast.SymbolExpression.result_type", false]], "result_type (ternaryexpression attribute)": [[5, "rule_engine.ast.TernaryExpression.result_type", false]], "result_type (timedeltaexpression attribute)": [[5, "rule_engine.ast.TimedeltaExpression.result_type", false]], "result_type (unaryexpression attribute)": [[5, "rule_engine.ast.UnaryExpression.result_type", false]], "rule (class in rule_engine.engine)": [[7, "rule_engine.engine.Rule", false]], "rule_engine.ast": [[5, "module-rule_engine.ast", false]], "rule_engine.builtins": [[6, "module-rule_engine.builtins", false]], "rule_engine.engine": [[7, "module-rule_engine.engine", false]], "rule_engine.errors": [[8, "module-rule_engine.errors", false]], "rule_engine.parser": [[10, "module-rule_engine.parser", false]], "rule_engine.parser.utilities": [[11, "module-rule_engine.parser.utilities", false]], "rule_engine.suggestions": [[12, "module-rule_engine.suggestions", false]], "rule_engine.types": [[13, "module-rule_engine.types", false]], "rulesyntaxerror": [[8, "rule_engine.errors.RuleSyntaxError", false]], "scope_name (builtins attribute)": [[6, "rule_engine.builtins.Builtins.scope_name", false]], "set() (datatype static method)": [[13, "rule_engine.types.DataType.SET", false]], "setexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SetExpression", false]], "statement (class in rule_engine.ast)": [[5, "rule_engine.ast.Statement", false]], "string (datatype attribute)": [[13, "rule_engine.types.DataType.STRING", false]], "stringexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.StringExpression", false]], "stringsyntaxerror": [[8, "rule_engine.errors.StringSyntaxError", false]], "subtractexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SubtractExpression", false]], "suggest_symbol() (in module rule_engine.suggestions)": [[12, "rule_engine.suggestions.suggest_symbol", false]], "suggestion (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.suggestion", false]], "suggestion (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.suggestion", false]], "symbol_name (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.symbol_name", false]], "symbol_name (symboltypeerror attribute)": [[8, "rule_engine.errors.SymbolTypeError.symbol_name", false]], "symbol_scope (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.symbol_scope", false]], "symbolexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.SymbolExpression", false]], "symbolresolutionerror": [[8, "rule_engine.errors.SymbolResolutionError", false]], "symbols (context attribute)": [[7, "rule_engine.engine.Context.symbols", false]], "symboltypeerror": [[8, "rule_engine.errors.SymbolTypeError", false]], "syntaxerror": [[8, "rule_engine.errors.SyntaxError", false]], "ternaryexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.TernaryExpression", false]], "thing (attributeresolutionerror attribute)": [[8, "rule_engine.errors.AttributeResolutionError.thing", false]], "thing (symbolresolutionerror attribute)": [[8, "rule_engine.errors.SymbolResolutionError.thing", false]], "timedelta (datatype attribute)": [[13, "rule_engine.types.DataType.TIMEDELTA", false]], "timedeltaexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.TimedeltaExpression", false]], "timedeltasyntaxerror": [[8, "rule_engine.errors.TimedeltaSyntaxError", false]], "to_graphviz() (rule method)": [[7, "rule_engine.engine.Rule.to_graphviz", false]], "token (rulesyntaxerror attribute)": [[8, "rule_engine.errors.RuleSyntaxError.token", false]], "type_resolver_from_dict() (in module rule_engine.engine)": [[7, "rule_engine.engine.type_resolver_from_dict", false]], "unaryexpression (class in rule_engine.ast)": [[5, "rule_engine.ast.UnaryExpression", false]], "undefined (datatype attribute)": [[13, "id0", false], [13, "rule_engine.types.DataType.UNDEFINED", false]], "undefined (in module rule_engine.errors)": [[8, "rule_engine.errors.UNDEFINED", false]], "value (assignment attribute)": [[5, "rule_engine.ast.Assignment.value", false]], "value (bytessyntaxerror attribute)": [[8, "rule_engine.errors.BytesSyntaxError.value", false]], "value (datetimesyntaxerror attribute)": [[8, "rule_engine.errors.DatetimeSyntaxError.value", false]], "value (floatsyntaxerror attribute)": [[8, "rule_engine.errors.FloatSyntaxError.value", false]], "value (regexsyntaxerror attribute)": [[8, "rule_engine.errors.RegexSyntaxError.value", false]], "value (stringsyntaxerror attribute)": [[8, "rule_engine.errors.StringSyntaxError.value", false]], "value (timedeltasyntaxerror attribute)": [[8, "rule_engine.errors.TimedeltaSyntaxError.value", false]], "value_type (assignment attribute)": [[5, "rule_engine.ast.Assignment.value_type", false]]}, "objects": {"debug_repl": [[2, 7, 1, "cmdoption-debug_repl-edit-console", "--edit-console"], [2, 7, 1, "cmdoption-debug_repl-edit-file", "--edit-file"]], "rule_engine": [[5, 0, 0, "-", "ast"], [6, 0, 0, "-", "builtins"], [7, 0, 0, "-", "engine"], [8, 0, 0, "-", "errors"], [10, 0, 0, "-", "parser"], [12, 0, 0, "-", "suggestions"], [13, 0, 0, "-", "types"]], "rule_engine.ast": [[5, 1, 1, "", "AddExpression"], [5, 1, 1, "", "ArithmeticComparisonExpression"], [5, 1, 1, "", "ArithmeticExpression"], [5, 1, 1, "", "ArrayExpression"], [5, 1, 1, "", "Assignment"], [5, 1, 1, "", "BitwiseExpression"], [5, 1, 1, "", "BitwiseShiftExpression"], [5, 1, 1, "", "BooleanExpression"], [5, 1, 1, "", "BytesExpression"], [5, 1, 1, "", "ComparisonExpression"], [5, 1, 1, "", "ComprehensionExpression"], [5, 1, 1, "", "ContainsExpression"], [5, 1, 1, "", "DatetimeExpression"], [5, 1, 1, "", "ExpressionBase"], [5, 1, 1, "", "FloatExpression"], [5, 1, 1, "", "FunctionExpression"], [5, 1, 1, "", "FuzzyComparisonExpression"], [5, 1, 1, "", "GetAttributeExpression"], [5, 1, 1, "", "GetItemExpression"], [5, 1, 1, "", "GetSliceExpression"], [5, 1, 1, "", "LeftOperatorRightExpressionBase"], [5, 1, 1, "", "LiteralExpressionBase"], [5, 1, 1, "", "LogicExpression"], [5, 1, 1, "", "MappingExpression"], [5, 1, 1, "", "NullExpression"], [5, 1, 1, "", "SetExpression"], [5, 1, 1, "", "Statement"], [5, 1, 1, "", "StringExpression"], [5, 1, 1, "", "SubtractExpression"], [5, 1, 1, "", "SymbolExpression"], [5, 1, 1, "", "TernaryExpression"], [5, 1, 1, "", "TimedeltaExpression"], [5, 1, 1, "", "UnaryExpression"]], "rule_engine.ast.AddExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArithmeticComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArithmeticExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ArrayExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.Assignment": [[5, 3, 1, "", "__init__"], [5, 2, 1, "", "name"], [5, 2, 1, "", "value"], [5, 2, 1, "", "value_type"]], "rule_engine.ast.BitwiseExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.BitwiseShiftExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.BooleanExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.BytesExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ComprehensionExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ContainsExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.DatetimeExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.ExpressionBase": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.FloatExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.FunctionExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.FuzzyComparisonExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetAttributeExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetItemExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.GetSliceExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.LeftOperatorRightExpressionBase": [[5, 3, 1, "", "__init__"], [5, 2, 1, "", "compatible_types"]], "rule_engine.ast.LiteralExpressionBase": [[5, 3, 1, "", "__init__"]], "rule_engine.ast.LogicExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.MappingExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.NullExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SetExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.StringExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SubtractExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.SymbolExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.TernaryExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.TimedeltaExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.ast.UnaryExpression": [[5, 2, 1, "", "result_type"]], "rule_engine.builtins": [[6, 1, 1, "", "Builtins"]], "rule_engine.builtins.Builtins": [[6, 3, 1, "", "__init__"], [6, 3, 1, "", "from_defaults"], [6, 3, 1, "", "resolve_type"], [6, 2, 1, "", "scope_name"]], "rule_engine.engine": [[7, 1, 1, "", "Context"], [7, 1, 1, "", "Rule"], [7, 4, 1, "", "resolve_attribute"], [7, 4, 1, "", "resolve_item"], [7, 4, 1, "", "type_resolver_from_dict"]], "rule_engine.engine.Context": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "assignments"], [7, 2, 1, "", "builtins"], [7, 2, 1, "", "decimal_context"], [7, 2, 1, "", "default_timezone"], [7, 2, 1, "", "default_value"], [7, 2, 1, "", "regex_flags"], [7, 3, 1, "", "resolve"], [7, 3, 1, "", "resolve_attribute"], [7, 3, 1, "", "resolve_attribute_type"], [7, 3, 1, "", "resolve_type"], [7, 2, 1, "", "symbols"]], "rule_engine.engine.Rule": [[7, 3, 1, "", "__init__"], [7, 3, 1, "", "evaluate"], [7, 3, 1, "", "filter"], [7, 3, 1, "", "is_valid"], [7, 3, 1, "", "matches"], [7, 2, 1, "", "parser"], [7, 3, 1, "", "to_graphviz"]], "rule_engine.errors": [[8, 5, 1, "", "AttributeResolutionError"], [8, 5, 1, "", "AttributeTypeError"], [8, 5, 1, "", "BytesSyntaxError"], [8, 5, 1, "", "DatetimeSyntaxError"], [8, 5, 1, "", "EngineError"], [8, 5, 1, "", "EvaluationError"], [8, 5, 1, "", "FloatSyntaxError"], [8, 5, 1, "", "FunctionCallError"], [8, 5, 1, "", "LookupError"], [8, 5, 1, "", "RegexSyntaxError"], [8, 5, 1, "", "RuleSyntaxError"], [8, 5, 1, "", "StringSyntaxError"], [8, 5, 1, "", "SymbolResolutionError"], [8, 5, 1, "", "SymbolTypeError"], [8, 5, 1, "", "SyntaxError"], [8, 5, 1, "", "TimedeltaSyntaxError"], [8, 6, 1, "", "UNDEFINED"]], "rule_engine.errors.AttributeResolutionError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "attribute_name"], [8, 2, 1, "", "object"], [8, 2, 1, "", "suggestion"], [8, 2, 1, "", "thing"]], "rule_engine.errors.AttributeTypeError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "attribute_name"], [8, 2, 1, "", "expected_type"], [8, 2, 1, "", "is_type"], [8, 2, 1, "", "is_value"], [8, 2, 1, "", "object_type"]], "rule_engine.errors.BytesSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.DatetimeSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.EngineError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "message"]], "rule_engine.errors.FloatSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.FunctionCallError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "error"]], "rule_engine.errors.LookupError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "container"], [8, 2, 1, "", "item"]], "rule_engine.errors.RegexSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "error"], [8, 2, 1, "", "value"]], "rule_engine.errors.RuleSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "token"]], "rule_engine.errors.StringSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.errors.SymbolResolutionError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "suggestion"], [8, 2, 1, "", "symbol_name"], [8, 2, 1, "", "symbol_scope"], [8, 2, 1, "", "thing"]], "rule_engine.errors.SymbolTypeError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "expected_type"], [8, 2, 1, "", "is_type"], [8, 2, 1, "", "is_value"], [8, 2, 1, "", "symbol_name"]], "rule_engine.errors.TimedeltaSyntaxError": [[8, 3, 1, "", "__init__"], [8, 2, 1, "", "value"]], "rule_engine.parser": [[10, 1, 1, "", "Parser"], [10, 1, 1, "", "ParserBase"], [11, 0, 0, "-", "utilities"]], "rule_engine.parser.Parser": [[10, 3, 1, "", "__init__"]], "rule_engine.parser.ParserBase": [[10, 3, 1, "", "__init__"], [10, 3, 1, "", "parse"], [10, 2, 1, "", "precedence"], [10, 2, 1, "", "reserved_words"]], "rule_engine.parser.utilities": [[11, 4, 1, "", "parse_datetime"], [11, 4, 1, "", "parse_float"], [11, 4, 1, "", "parse_timedelta"]], "rule_engine.suggestions": [[12, 4, 1, "", "suggest_symbol"]], "rule_engine.types": [[13, 1, 1, "", "DataType"], [13, 4, 1, "", "coerce_value"], [13, 4, 1, "", "is_integer_number"], [13, 4, 1, "", "is_natural_number"], [13, 4, 1, "", "is_numeric"], [13, 4, 1, "", "is_real_number"], [13, 4, 1, "", "iterable_member_value_type"]], "rule_engine.types.DataType": [[13, 3, 1, "", "ARRAY"], [13, 2, 1, "", "BOOLEAN"], [13, 2, 1, "", "BYTES"], [13, 2, 1, "", "DATETIME"], [13, 2, 1, "", "FLOAT"], [13, 3, 1, "", "FUNCTION"], [13, 3, 1, "", "MAPPING"], [13, 2, 1, "", "NULL"], [13, 3, 1, "", "SET"], [13, 2, 1, "", "STRING"], [13, 2, 1, "", "TIMEDELTA"], [13, 2, 1, "id0", "UNDEFINED"], [13, 3, 1, "", "from_name"], [13, 3, 1, "", "from_type"], [13, 3, 1, "", "from_value"], [13, 3, 1, "", "is_compatible"], [13, 3, 1, "", "is_definition"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "exception", "Python exception"], "6": ["py", "data", "Python data"], "7": ["std", "cmdoption", "program option"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:exception", "6": "py:data", "7": "std:cmdoption"}, "terms": {"": [0, 1, 3, 7, 8, 10, 13, 14, 15], "0": [0, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15], "00": [3, 14], "01": 3, "04": 14, "05": 3, "06": 3, "09": 14, "0b": 14, "0b10": 14, "0e0": 14, "0o": 14, "0o10": 14, "0x": 14, "0x10": 14, "0x7f2bdafbe650": 3, "1": [2, 3, 4, 7, 13, 14, 15], "10": 14, "11th": 1, "14": 0, "14159": 14, "15th": 1, "16": 14, "16th": 1, "18": 3, "19th": 1, "1e0": 14, "1st": 1, "2": [3, 4, 6, 7, 8, 12, 13, 14, 15], "2018": 1, "2019": [1, 14], "2020": [1, 3], "2021": 1, "2022": 1, "2023": 1, "2024": 1, "20th": 1, "23": 14, "24": 14, "27th": 1, "28": 3, "2nd": 1, "3": [0, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15], "30": 15, "3rd": 1, "4": [0, 2, 3, 4, 8, 13, 14], "440": 14, "5": [0, 2, 3, 5, 8, 15], "5th": 1, "6": 3, "64": 0, "71828": 14, "753": 3, "7th": 1, "8": [0, 14], "8601": [11, 14], "89": 3, "9th": 1, "A": [5, 6, 7, 8, 10, 12, 13, 14], "By": 3, "For": [0, 3, 14, 15], "If": [0, 3, 7, 11, 12, 13, 14], "In": [0, 1, 3, 13, 14], "It": [3, 7, 13, 15], "Not": 14, "One": [13, 14], "That": 15, "The": [0, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "There": [3, 13, 14], "These": [5, 6, 14], "To": [3, 10, 15], "With": 3, "__class__": 13, "__init__": [1, 3, 5, 6, 7, 8, 10], "__version__": 3, "_collectionmixin": 5, "ab": [1, 14], "abil": [1, 15], "abl": [8, 10, 13, 14], "about": 3, "absolut": 14, "abstract": [3, 5, 7, 10], "access": [0, 3, 5, 6, 7, 14], "action": 1, "ad": [0, 1, 3, 5, 6, 7, 8, 12, 13, 14, 15], "add": [1, 3, 5, 7, 14], "addexpress": 5, "addit": [0, 1, 3, 5, 14, 15], "addition": [2, 7, 14], "advanc": 4, "affect": 15, "after": [7, 14], "against": 7, "all": [1, 3, 7, 13, 14, 15], "allow": [1, 2, 3, 7, 10, 13, 15], "also": [3, 13, 14, 15], "alter": 14, "altern": [3, 12, 14], "alwai": [3, 5, 15], "an": [0, 1, 2, 3, 5, 7, 8, 10, 12, 13, 14, 15], "analog": [8, 14], "ani": [0, 3, 5, 7, 10, 13, 14], "anoth": [3, 14, 15], "anyth": [14, 15], "api": [5, 7, 10], "appear": 7, "append": 14, "appli": [3, 4, 7, 14, 15], "appropri": 7, "april": 1, "ar": [0, 3, 4, 5, 7, 8, 10, 12, 13, 14, 15], "arbitrari": [3, 4, 7, 14], "arg": [3, 5], "argument": [0, 1, 3, 4, 6, 13, 14], "argument_typ": [3, 13], "argumentnam": 14, "argumenttyp": 14, "arithmet": [1, 5, 14, 15], "arithmeticcomparisonexpress": 5, "arithmeticexpress": 5, "arrai": [0, 1, 3, 5, 13, 15], "arrayexpress": 5, "artist": 3, "as_low": 0, "as_upp": [0, 3], "ascii": 0, "aspect": 7, "assign": [5, 7, 14], "assist": 3, "associ": [0, 5], "assum": [3, 15], "ast": [1, 3, 4, 7, 8, 9, 10], "astnodebas": [5, 10], "attempt": 14, "attr": 14, "attribut": [1, 4, 5, 7, 8, 14], "attribute_nam": 8, "attributeresolutionerror": [1, 7, 8], "attributetypeerror": 8, "audienc": 15, "august": 1, "author": [3, 15], "automat": [1, 3, 7], "avail": [2, 3, 4, 8, 15], "awar": 14, "b": 14, "back": 15, "base": [0, 3, 6, 7, 8, 10, 13, 14], "base16": 0, "base64": 0, "basic": [4, 14], "batman": [2, 3], "becaus": [3, 13, 14], "becom": 3, "been": [3, 10, 14, 15], "befor": [5, 7, 14], "behav": [3, 15], "behavior": [3, 7, 15], "being": [3, 7, 8, 13, 14], "below": 14, "best": 12, "between": [5, 14, 15], "binari": [5, 14, 15], "bit": 14, "bitwis": [5, 14], "bitwiseexpress": 5, "bitwiseshiftexpress": 5, "book": [2, 3], "bool": [7, 10, 13, 15], "boolean": [0, 3, 5, 7, 13, 14, 15], "booleanexpress": [5, 14], "borrow": 3, "both": [13, 14, 15], "boundari": [13, 14], "bracket": 14, "break": [1, 5], "build": [10, 14], "built": [6, 10], "builtin": [1, 4, 7, 8, 9, 15], "bump": 5, "byte": [0, 1, 5, 8, 13, 14, 15], "bytesexpress": 5, "bytessyntaxerror": 8, "call": [0, 3, 6, 7, 8, 15], "callabl": 15, "callback": 7, "caller": [7, 15], "can": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15], "capabl": [13, 15], "captain": 3, "care": [5, 15], "case": [2, 3, 7, 13, 14], "case_fals": 5, "case_tru": 5, "caus": [5, 7, 8, 10], "ceil": [0, 1], "center": 5, "certain": [3, 7], "chang": [4, 5, 6, 7, 8, 13, 15], "charact": [1, 5, 14], "check": [0, 3, 5, 7, 13, 14], "ci": 1, "class": [1, 3, 6, 8, 15], "classmethod": [6, 7, 13], "cli": 4, "code": [2, 5], "coerc": 15, "coerce_valu": 13, "coercion": 1, "collect": [3, 7, 13], "colon": 14, "combin": [8, 14], "come": [14, 15], "comic": [2, 3], "command": 2, "comment": [1, 5], "compar": [3, 13, 14], "comparison": [1, 3, 5, 7, 14], "comparisonexpress": 5, "compat": [3, 5, 7, 13, 14, 15], "compatible_typ": 5, "complet": 15, "complex": [3, 5], "compon": [10, 14], "compos": [5, 14], "compound": [0, 4, 13], "comprehens": 15, "comprehensionexpress": [1, 5], "compris": 5, "concaten": 1, "condit": [3, 5, 14], "configur": [3, 4], "confus": 14, "consecut": 14, "consid": 13, "consist": [3, 7], "consol": 2, "constant": [7, 13, 14], "constraint": 7, "construct": 10, "constructor": 3, "consum": 5, "contain": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "containsexpress": 5, "content": 5, "context": [0, 1, 2, 3, 5, 6, 7, 10, 14, 15], "continu": 1, "contribut": 3, "conveni": [3, 7], "convers": [1, 13, 15], "convert": [0, 10, 13, 15], "correct": [3, 7], "correspond": [7, 10, 13], "could": [3, 14], "coverag": 1, "creat": [3, 4, 7, 14, 15], "curat": 1, "current": [1, 7, 13, 14], "custom": [1, 2, 7, 14], "custombuiltinscontext": 3, "d": [3, 14], "dai": [0, 14, 15], "darth": 4, "data": [1, 4, 5, 6, 7, 13, 14], "datatyp": [1, 3, 4, 5, 6, 13, 14, 15], "date": [0, 3, 14, 15], "datetim": [0, 1, 3, 4, 5, 7, 8, 11, 13, 15], "datetimeexpress": 5, "datetimesyntaxerror": [8, 14], "dateutil": 14, "dc": [2, 3], "dd": 3, "deal": 13, "debug": [1, 3, 4, 10], "debug_repl": 2, "decemb": 1, "decim": [1, 7, 11, 14, 15], "decimal_context": 7, "dedic": 1, "def": 3, "default": [0, 6, 7, 11, 13, 14, 15], "default_timezon": [3, 7, 11, 14], "default_timzezon": 7, "default_valu": [1, 3, 7], "defer": 10, "defin": [0, 2, 4, 5, 6, 7, 10, 13, 14, 15], "definit": [10, 13], "delimit": 14, "demonstr": 2, "deploy": 1, "describ": 15, "descript": [8, 14], "desir": 3, "despit": 13, "detail": 1, "detect": 3, "determin": [0, 3, 7, 14], "develop": [1, 3, 15], "diagram": 7, "dict": [2, 3, 6, 7, 14, 15], "dictionari": [0, 7, 15], "differ": [13, 14], "digraph": 7, "direct": 3, "directli": 5, "divis": [5, 14], "do": [3, 7, 14, 15], "document": [1, 3, 5, 14, 15], "doe": [5, 7, 10, 11, 14], "done": [3, 5, 10], "dot": 3, "doubl": 14, "drop": 1, "dt": 13, "dt1": 13, "dt2": 13, "due": 0, "durat": [11, 14], "dure": [8, 10], "dvader": 4, "e": [0, 1, 3, 13, 14, 15], "each": [0, 1, 3, 7, 10, 13, 14, 15], "edit": 2, "edt": 14, "effect": [7, 13], "effici": 10, "either": [2, 3, 5, 6, 7, 8, 13, 14, 15], "element": 14, "elif": [1, 3, 14], "els": [1, 14], "email": 4, "empir": 4, "empti": [3, 5, 14], "enabl": 10, "enclos": 14, "end": [0, 3, 14], "ends_with": [0, 1], "engin": [1, 2, 3, 6, 8, 9, 13, 14, 15], "engineerror": 8, "ensur": [3, 7, 13, 15], "entir": 14, "entri": 1, "enum": 1, "enumer": 3, "environ": 2, "equal": [5, 13, 14], "equival": [14, 15], "error": [1, 3, 4, 9, 12], "eval": [2, 3], "evalu": [0, 2, 3, 4, 5, 7, 8, 10, 13, 14, 15], "evaluationerror": [3, 8, 10, 14], "even": 14, "event": 15, "everi": [13, 14], "everyth": 14, "exactli": 14, "exampl": [0, 3, 5, 7, 13, 14, 15], "except": [3, 7, 10, 13, 14], "exclud": 14, "exclus": 14, "exec": 3, "execut": 2, "exist": [5, 7], "exit": 2, "expect": [3, 8], "expected_typ": 8, "explicit": [3, 13], "explicitli": 15, "expon": 14, "expos": [3, 7], "express": [1, 2, 3, 4, 7, 8], "expressionbas": 5, "extend": 15, "extens": 13, "extern": [7, 13], "extract": 1, "face": 7, "fail": [0, 3, 7, 8, 14], "fals": [2, 3, 4, 5, 10, 14, 15], "false_cas": 14, "falsi": 8, "familiar": 15, "favor": 1, "featur": [3, 4, 5, 10], "few": [1, 3, 15], "file": 2, "filter": [3, 7, 12, 14], "final": [3, 14], "finit": 13, "first": [1, 3, 4, 10, 13, 14], "first_nam": 4, "flag": 7, "flash": 3, "flexibl": 3, "float": [1, 3, 4, 5, 7, 8, 11, 13], "floatexpress": [5, 14], "floatsyntaxerror": [1, 8, 14], "floor": [0, 1, 14], "folder": 4, "follow": [0, 2, 3, 14, 15], "form": [7, 13], "format": [0, 3, 8, 11, 14], "forward": 3, "found": 12, "four": [3, 14], "from": [0, 1, 2, 4, 5, 7, 8, 10, 12, 13, 14, 15], "from_default": [3, 6, 14], "from_float": 15, "from_nam": 13, "from_typ": [1, 13], "from_valu": 13, "function": [0, 1, 4, 5, 6, 8], "function_nam": 8, "functioncallerror": [1, 8, 14], "functionexpress": 5, "functionnam": 14, "futur": [1, 14], "fuzzi": 14, "fuzzycomparisonexpress": 5, "g": [1, 13, 14, 15], "gener": [3, 4, 5, 7, 14], "get": [1, 4, 13, 14, 15], "getattributeexpress": 5, "getitemexpress": 5, "getsliceexpress": 5, "git": 1, "github": [1, 4], "given": 3, "grammar": [4, 5, 7, 8, 10], "graph": 3, "graphviz": [1, 3, 7], "greater": [5, 14], "group": [1, 14], "guarante": 14, "ha": [0, 2, 3, 10, 14, 15], "had": 3, "hand": 3, "handl": [0, 1, 3, 5, 7, 14], "happen": 15, "have": [1, 3, 7, 14, 15], "held": 14, "help": [3, 5], "helper": 12, "here": 14, "hex": 0, "hexadecim": 14, "hh": 3, "hint": [1, 4, 7, 13], "hour": [0, 14], "how": [3, 7, 14, 15], "howev": [3, 7, 14], "http": 4, "i": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "ident": 6, "identifi": [3, 7, 8], "ignor": [13, 14], "import": [4, 15], "improp": 8, "improperli": 8, "improv": 1, "includ": [2, 3, 4, 14], "inclus": 14, "incompat": [1, 3, 8, 14], "index": [1, 4, 8, 14], "indexerror": 8, "indic": [5, 13], "inf": 14, "infin": 14, "inform": [1, 3, 7, 8, 13, 14, 15], "inherit": [8, 10], "initi": [3, 6], "input": 15, "insensit": 7, "inspect": 4, "instanc": [2, 3, 6, 7], "instead": [1, 3, 14], "int": [3, 7, 13, 15], "integ": [3, 13], "integr": 1, "interact": 2, "interfac": 7, "intern": [1, 5, 13, 15], "introduc": 15, "intuit": 15, "invalid": [0, 1, 3, 14], "involv": [5, 10, 14], "io": 4, "is_compat": 13, "is_definit": 13, "is_empti": 0, "is_integer_numb": 13, "is_nan": [0, 1], "is_natural_numb": 13, "is_numer": 13, "is_real_numb": 13, "is_typ": 8, "is_valid": [3, 7], "is_valu": 8, "isinst": 13, "iso": [11, 14], "isopars": 14, "issu": [2, 3, 7, 8], "item": [1, 3, 5, 7, 8, 14], "iter": [1, 3, 5, 7, 13, 14, 15], "iterable_member_value_typ": 13, "its": [3, 13], "itself": [7, 14], "januari": 1, "juli": 1, "june": 1, "just": [3, 14], "k": 14, "kei": [0, 3, 5, 6, 8, 13, 15], "key_typ": 13, "keyerror": 8, "keyword": [1, 3], "kind": [3, 13], "know": [3, 15], "known": [3, 7], "kwarg": [1, 3, 5, 6, 10], "languag": [3, 4, 14], "largest": 14, "last": 14, "last_nam": 4, "later": 10, "lead": 14, "lee": 3, "left": [3, 14], "leftoperatorrightexpressionbas": 5, "length": [0, 13, 14, 15], "less": [5, 14], "letter": [3, 14], "level": 5, "leverag": 14, "lexicograph": 14, "librari": [4, 14], "like": [0, 3, 14], "limit": 14, "line": 2, "list": [1, 3, 12, 14, 15], "liter": [0, 1, 3, 4, 6, 7, 10, 11, 15], "literalexpressionbas": 5, "local": [7, 14], "log": 4, "logic": [4, 5, 7, 10, 14], "logicexpress": 5, "longer": 1, "look": [3, 7], "lookup": [8, 14], "lookuperror": [8, 14], "loop": 2, "loss": 13, "luke": 4, "m": 2, "mai": [2, 3, 5, 13, 14, 15], "major": [1, 5], "make": [3, 10, 12, 15], "mandatori": 14, "mani": [3, 10, 14], "manner": [13, 14], "map": [0, 1, 3, 5, 6, 7, 10, 13, 14, 15], "mappingexpress": 5, "march": 1, "mark": 14, "marvel": 3, "match": [0, 1, 3, 4, 5, 7, 12, 14, 15], "mathemat": [14, 15], "max": 14, "maximum": [3, 14], "maxsplit": 14, "mean": [3, 13, 14, 15], "meant": [3, 5], "member": [0, 1, 3, 5, 7, 10, 13, 14, 15], "membership": 14, "messag": [3, 8], "method": [3, 5, 6, 7, 14], "microsecond": 0, "midnight": [3, 14], "might": 3, "millisecond": 0, "min": 14, "minimum": [3, 13], "minimum_argu": [3, 13], "minut": [0, 3, 14], "mismatch": 14, "miss": 7, "mistak": 3, "mix": 15, "mm": 3, "modifi": 3, "modul": [1, 2, 4, 5, 6, 7, 8, 10, 11, 12, 13], "modulo": 14, "month": [0, 14], "more": [3, 4, 5, 7, 10, 14, 15], "most": [3, 13], "move": 1, "much": [0, 15], "multipl": [1, 5, 10, 14], "must": [0, 3, 5, 7, 14, 15], "my_dict": 14, "name": [0, 1, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14], "namedtupl": 7, "namespac": 6, "nan": [13, 14], "nativ": [0, 5, 8, 13], "natur": [13, 14], "navig": 1, "necessari": [2, 3, 5, 7], "necessarili": 7, "need": [3, 7, 12, 14], "neg": [13, 14], "neither": 3, "net": 4, "never": 13, "new": [1, 5, 14], "next": 10, "node": [5, 8, 10], "non": [3, 13, 14], "none": [3, 5, 6, 7, 8, 12, 13], "nonetyp": 15, "normal": [3, 14, 15], "notat": 14, "note": [1, 14, 15], "notic": 3, "novemb": 1, "now": [1, 3, 14], "nuanc": 15, "null": [1, 3, 5, 13, 14, 15], "nullabl": [3, 13], "nullexpress": [5, 14], "number": [3, 13, 14, 15], "numer": [5, 13, 14], "object": [2, 4, 5, 7, 8, 10, 13, 14, 15], "object_": [5, 7, 8], "object_typ": [7, 8], "obtain": [8, 14], "occur": [8, 12], "occurr": 14, "octal": 14, "octob": 1, "odd": 14, "off": 14, "offset": 5, "often": [3, 5], "omit": [3, 14], "onc": [2, 3, 10, 15], "one": [3, 7, 13, 14], "ones": 3, "onli": [1, 3, 13, 14, 15], "open": 14, "oper": [0, 1, 3, 7, 8, 10, 15], "option": [1, 2, 3, 4, 7, 8, 10, 12, 14], "order": [5, 14], "org": 4, "origin": [7, 12], "other": [3, 7, 8, 13, 14, 15], "otherwis": 3, "out": [12, 14], "outlin": 14, "output": 1, "over": 7, "overlap": 3, "overrid": 3, "overridden": 14, "own": [0, 4], "p1d": 14, "packag": [2, 3, 5, 7, 8], "page": [4, 15], "paramet": [3, 5, 6, 7, 8, 10, 11, 12, 13, 14], "parent": 3, "parenthesi": [0, 14], "pars": [5, 7, 8, 10, 11, 14], "parse_datetim": [11, 14], "parse_float": [11, 14], "parse_timedelta": [11, 14], "parser": [1, 4, 7, 9, 14], "parserbas": 10, "particular": 13, "pass": [3, 6, 7, 14, 15], "path": 2, "perform": [7, 8, 14, 15], "period": [11, 14], "phase": [8, 10], "pi": 14, "pipfil": 1, "place": [7, 10, 14], "ply": [8, 10], "point": [0, 1, 5, 11, 13, 14, 15], "popul": [3, 5], "portion": 3, "posit": [3, 14], "possibl": [3, 15], "potenti": 3, "preced": 10, "prefix": [0, 3, 6, 14], "preform": [3, 14], "previou": [3, 14], "primari": [3, 7], "print": 2, "prior": 3, "privat": 5, "project": 4, "proper": 1, "properli": 14, "provid": [2, 3, 4, 6, 7, 10, 14, 15], "pseudo": 14, "pt1440m": 14, "pt24h": 14, "publish": [2, 3], "punctuat": 3, "purpos": [2, 3, 4, 13], "py": 14, "python": [0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15], "python_typ": 13, "python_valu": 13, "question": 14, "quot": 14, "r": 14, "rais": [1, 3, 7, 8, 10, 13, 14], "random": 14, "rang": [1, 5, 14], "re": [7, 8], "re_group": [1, 14], "read": 2, "real": 13, "reason": [3, 5, 14, 15], "rebel": 4, "recurs": [0, 10, 13], "reduc": [10, 14], "reduct": [8, 10], "refactor": 1, "refer": [3, 7, 14], "referenc": [3, 14], "regard": [7, 8, 15], "regardless": 7, "regex": [1, 3, 4, 7, 14], "regex_flag": 7, "regexsyntaxerror": 8, "regular": [1, 3, 4, 5, 8], "relat": [8, 10], "releas": [1, 3], "remain": [3, 14], "remov": [1, 3], "repl": [1, 4], "replac": [7, 12, 14], "report": 1, "repr": 15, "repres": [5, 11, 13, 14], "represent": [14, 15], "requir": [3, 13, 14], "resembl": 0, "reserv": [1, 10], "reserved_word": 10, "resolut": [7, 8], "resolv": [0, 1, 5, 6, 7, 8, 13, 14], "resolve_attribut": [3, 7], "resolve_attribute_typ": 7, "resolve_item": [3, 7], "resolve_typ": [6, 7], "respect": [3, 10, 14], "rest": 3, "result": [2, 3, 5, 7, 14, 15], "result_typ": 5, "retriev": [1, 5, 6, 7, 13], "return": [0, 1, 3, 5, 6, 7, 10, 11, 12, 13, 14], "return_typ": [3, 13], "returntyp": 14, "right": [3, 14], "root": 8, "rubi": 3, "rule": [0, 1, 2, 6, 7, 8, 10, 13, 15], "rule_engin": [1, 2, 3, 4, 7, 10], "rulesyntaxerror": [1, 8], "run": 2, "safe": [1, 3, 5, 13, 14], "same": [0, 3, 7, 13, 14, 15], "scalar": [13, 15], "scientif": 14, "scope": [5, 6, 7, 8], "scope_nam": 6, "script": 1, "search": [4, 5, 7, 14], "second": [0, 3, 13, 14], "section": [3, 15], "secur": 3, "see": [3, 4, 7, 14, 15], "select": 12, "self": 3, "sensit": 7, "sentinel": 8, "sep": 14, "separ": 5, "seper": 3, "septemb": 1, "sequenc": [1, 13, 14], "set": [0, 1, 5, 6, 7, 11, 13, 14, 15], "setexpress": 5, "setup": 2, "share": 3, "shift": [5, 14], "should": [3, 5, 7, 8, 15], "show": 14, "side": [3, 5], "signatur": [3, 14], "similar": [3, 14], "simpl": 3, "simpli": 3, "sinc": [2, 15], "singl": [3, 5, 6, 14, 15], "size": 14, "skywalk": 4, "slice": 1, "small": 14, "smallest": 14, "so": 3, "some": [1, 3, 4, 7, 14], "someth": 8, "sourc": [2, 3, 5, 6, 7, 8, 10, 11, 12, 13], "space": [3, 14], "special": [0, 7, 13], "specif": [5, 7, 10, 14], "specifi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15], "split": [1, 3, 13, 14], "squar": 14, "ss": 3, "sta": 14, "stan": 3, "standard": 14, "star": 14, "start": [0, 1, 2, 4, 5, 14, 15], "starts_with": [0, 1], "statement": [5, 10, 14], "static": 13, "step": 14, "stop": [5, 14], "str": [3, 5, 6, 7, 8, 10, 11, 12, 13, 15], "string": [0, 1, 3, 4, 5, 6, 7, 8, 11, 12, 13, 14, 15], "stringexpress": 5, "stringsyntaxerror": [1, 8], "structur": [3, 7], "style": 1, "sub": [5, 14], "subclass": [5, 7, 14], "submemb": 0, "subset": 14, "substr": 14, "subtract": [5, 14, 15], "subtractexpress": 5, "success": 5, "successfulli": 3, "suffix": 0, "suggest": [1, 4, 8, 9], "suggest_symbol": [3, 12], "suitabl": [3, 7, 12], "sum": 14, "super": 3, "superman": 2, "suppli": 14, "support": [1, 3, 7, 13, 15], "switch": 1, "symbol": [1, 2, 4, 5, 6, 7, 8, 12, 13, 15], "symbol_nam": 8, "symbol_scop": 8, "symbolexpress": 5, "symbolresolutionerror": [1, 3, 7, 8], "symboltypeerror": [3, 8], "syntact": 7, "syntax": [0, 3, 4, 5, 7, 8, 10, 15], "syntaxerror": 8, "t": 14, "tabl": [14, 15], "take": [3, 10, 13, 14, 15], "taken": [7, 14], "target": 3, "team": 1, "technic": 14, "techniqu": [3, 14], "ternari": 5, "ternaryexpress": 5, "test": [1, 2, 3, 5, 7, 13, 14], "text": [3, 4, 5, 7, 8, 10, 14, 15], "than": [5, 14], "thei": [0, 1, 3, 4, 15], "them": [3, 13, 14, 15], "themselv": [1, 15], "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15], "thing": [0, 2, 3, 7, 8, 15], "third": [3, 14], "those": 3, "though": 15, "thread": 7, "three": [3, 13, 14], "through": [2, 3, 14], "time": [3, 5, 7, 8, 10, 11, 14, 15], "timedelta": [0, 1, 4, 5, 8, 11, 13], "timedeltaexpress": 5, "timedeltasyntaxerror": [8, 14], "timestamp": [6, 11], "timezon": [3, 6, 7, 11, 14], "titl": [2, 3], "to_ari": [0, 1], "to_default_dict": 1, "to_default_resolv": 1, "to_epoch": [0, 1], "to_flt": [0, 1], "to_graphviz": [3, 7], "to_int": [0, 1], "to_recursive_resolv": 1, "to_set": 0, "to_str": [0, 1], "todai": 14, "token": 8, "top": 5, "total_second": 0, "tp": 14, "tradit": 14, "transcod": 0, "travi": 1, "treat": [3, 5], "tree": [3, 5, 7, 10], "trigger": 8, "true": [2, 3, 4, 5, 7, 13, 14, 15], "true_cas": 14, "truthi": 14, "tupl": [5, 12, 13, 15], "two": [3, 10, 13, 14, 15], "type": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14], "type_": 5, "type_resolv": [3, 7], "type_resolver_from_dict": [3, 7], "typeerror": [7, 13], "typehint": 13, "tzinfo": [6, 7, 11], "unari": 5, "unaryexpress": 5, "unavail": 14, "undefin": [3, 5, 6, 7, 8, 13], "underli": 14, "uniniti": 10, "uniqu": 15, "unit": [1, 14], "unknown": [3, 13], "unless": 14, "unlik": [7, 14], "unlimit": 14, "unnecessari": 3, "unpack": 14, "unspecifi": 13, "untrust": 3, "up": [3, 7, 14], "updat": [5, 14], "upper": 14, "us": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15], "user": [2, 3], "utc": 7, "utf": 0, "util": [1, 9, 10, 13, 14], "v": 14, "v1": 1, "v2": [1, 2, 3], "v3": [1, 15], "v4": [1, 15], "vader": 4, "valid": [0, 3, 7, 8, 13, 14], "valu": [0, 1, 5, 6, 7, 8, 11, 12, 13, 15], "value_typ": [5, 6, 13], "value_type_nul": 13, "valueerror": 13, "variabl": [3, 5, 6, 14], "variant": 14, "variat": 3, "variou": [3, 10, 11], "veri": 14, "verifi": [7, 13], "verify_typ": 13, "version": [0, 2, 3, 4, 5, 6, 7, 8, 12, 13, 14, 15], "via": 1, "view": 2, "wa": [7, 8, 14, 15], "wai": [3, 5, 13], "war": 14, "weekdai": 0, "well": [7, 13], "were": 3, "what": [7, 8], "when": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14], "where": [3, 7, 8, 14], "wherebi": 5, "whether": [0, 3, 4, 5, 7, 10, 13], "which": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14], "while": [0, 1, 3, 5, 7, 8, 10, 14, 15], "whitelist": 7, "whitespac": [1, 3, 14], "who": 15, "whole": 13, "whose": 3, "wise": 14, "within": [3, 5, 6, 7, 8, 10, 14, 15], "without": [3, 13, 14], "word": [1, 10, 12], "work": [13, 14], "worthi": 1, "would": [3, 7, 15], "wrap": 14, "written": 4, "x": 4, "xor": [5, 14], "year": [0, 14], "yield": [3, 7], "you": 15, "yyyi": 3, "zero": [3, 14, 15], "zerostein": 4, "zone_nam": 0}, "titles": ["Data Attributes", "Change Log", "Debug REPL", "Getting Started", "Rule Engine Documentation", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">ast</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">builtins</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">errors</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">rule_engine</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">parser</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">utilities</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">suggestions</span></code>", "<code class=\"xref py py-mod docutils literal notranslate\"><span class=\"pre\">types</span></code>", "Rule Syntax", "Data Types"], "titleterms": {"0": 1, "1": [0, 1], "2": 1, "3": 1, "4": 1, "5": 1, "6": 1, "A": 3, "accessor": 14, "advanc": 3, "argument": 2, "arrai": 14, "ast": 5, "attribut": [0, 3], "back": 3, "base": 5, "basic": 3, "builtin": [0, 3, 6, 14], "call": 14, "chang": [1, 3], "class": [5, 7, 10, 13], "cli": 2, "comment": 14, "compound": [3, 15], "comprehens": 14, "configur": 2, "content": 4, "custom": 3, "data": [0, 3, 8, 15], "datetim": 14, "debug": 2, "decod": 0, "default": 3, "defin": 3, "dictionari": 3, "document": 4, "encod": 0, "engin": [4, 7], "error": 8, "exampl": [2, 4], "except": 8, "express": [5, 14], "float": [0, 14, 15], "from": 3, "function": [3, 7, 11, 12, 13, 14, 15], "get": 3, "grammar": 14, "hierarchi": 8, "hint": 3, "indic": 4, "inspect": 3, "keyword": 14, "left": 5, "liter": [5, 14], "log": 1, "math": 14, "method": 0, "miscellan": 5, "object": [0, 3], "oper": [5, 14], "parser": 10, "regular": 14, "relat": 14, "repl": 2, "reserv": 14, "resolv": 3, "right": 5, "rule": [3, 4, 14], "rule_engin": 9, "set": 3, "start": 3, "suggest": [3, 12], "support": 14, "symbol": [3, 14], "syntax": 14, "tabl": 4, "ternari": 14, "timedelta": [14, 15], "timestamp": 14, "type": [3, 13, 15], "usag": [2, 3, 4], "util": 11, "valu": [3, 14], "version": 1, "x": 1}})